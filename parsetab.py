
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND ARROW ASSIGN AT BACKTICK BIT_NOT BIT_OR BIT_XOR COLON COMMA C_APP C_ASSOCIATIVITY C_CONST C_CONVENIENCE C_DID_SET C_DYNAMIC C_FINAL C_GET C_GLOBAL C_INDIRECT C_INFIX C_LAZY C_LEFT C_MUTATING C_NONE C_NONMUTATING C_OPTIONAL C_OVERRIDE C_POSTFIX C_PRAGMA C_PRECEDENCE C_PREFIX C_PROTOCOL C_REQUIRED C_RIGHT C_SET C_TYPE C_TYPEDEF C_UNOWNED C_WEAK C_WILLSET DIV DIV_AS DOT DOUBLE DOUBLEPER D_ASSOCIATED_TYPE D_DEINIT D_ENUM D_EXTENSION D_FILE_PRIVATE D_FUNCTION D_IMPORT D_INIT D_INOUT D_LET D_OPERATOR D_PRIVATE D_PROTOCOL D_PUBLIC D_STATIC D_STRUCT D_SUBSCRIPT D_TYPE_ALIAS D_VAR EQUAL EXCLAMATION E_ANY E_AS E_CATCH E_DEEP E_FALSE E_IS E_NIL E_RETHROWS E_SELF E_SELF_CAPITAL E_STDERR E_STDIN E_STDOUT E_SUPER E_THROW E_THROWS E_TRUE E_TRY E_WAIT GREATER GREATER_EQ HASH HRANGE ID INF INT LBRACE LBRACKET LESS LESS_EQ LOG_AND LOG_OR LPAREN LSHIFT MINUS MINUS_AS MOD MOD_AS MULT MULTPER MULT_AS MUL_STR_LITERAL NAN NOT_EQUAL N_AVAILABLE N_COLOR_LITERAL N_COLUMN N_ELSE N_ELSE_IF N_END_IF N_ERROR N_FILE N_FILE_LITERAL N_FUNCTION N_IF N_IMAGE_LITERAL N_LINE N_SELECTOR N_SOURCE_LOCATION N_WARNING PLUS PLUS_AS P_UNDERSCORE QUESTION RANGE RBRACE RBRACKET RPAREN RSHIFT SEMICOLON STR_LITERAL S_BREAK S_CASE S_CONTINUE S_DEFAULT S_DEFER S_DO S_ELSE S_FALLTHROUGH S_FOR S_FOREACH S_GUARD S_IF S_IN S_ITERATE S_REPEAT S_RETURN S_SWITCH S_UNTIL S_WHERE S_WHILE UPD class_BOOL class_CHARACTER class_DOUBLE class_FLOAT class_INT class_String class_UINT class_VOID collection_ARRAY collection_DICT collection_SET\n    translation-unit  :  statement-star\n    \n    statement-star  : statement statement-star\n                    | empty\n    \n    statement  :  SEMICOLON\n               | global-const-defn\n               | import-stmt\n               | pragma-stmt\n               | func-defn\n               | block\n               | if-stmt\n               | switch-stmt\n               | wait-stmt\n               | foreach-loop\n               | for-loop\n               | var-decl\n               | while-loop\n               | iterate-loop\n               | stmt-chain\n               | opt-else-block\n               | var-name\n               | assignment\n               | func-call\n               | update-stmt\n    \n    global-const-defn  :  C_GLOBAL C_CONST var-decl SEMICOLON\n    \n    import-stmt  :  D_IMPORT module-path SEMICOLON\n                | D_IMPORT STR_LITERAL SEMICOLON\n    \n    module-path  :  ID path-star\n    \n    path-star   : DOT ID path-star\n\t|\n    \n    pragma-stmt  :  C_PRAGMA ID expr  SEMICOLON\n    \n    func-defn  :  swift-func-defn\n               | app-func-defn\n               | foreign-func-defn\n    \n    func-hdr  : D_FUNCTION ID formal-arg-list ID empty-or-arg-list\n    \n    empty-or-arg-list    : formal-arg-list\n\t                     | empty\n    \n    type-params  : LESS var-name comma-name-star GREATER\n\t             | empty\n    \n    comma-name-star : COMMA var-name comma-name-star\n\t| empty\n    \n    formal-arg-list  : LPAREN opt-formal-args RPAREN\n\t| empty\n    \n    opt-formal-args : formal-arg comma-args-star\n\t| empty\n    \n    comma-args-star : COMMA formal-arg comma-args-star\n\t| empty\n    \n    formal-arg  :  empty-or-range var-name  type-prefix\n    \n    empty-or-range    : RANGE\n\t                    | empty\n    \n    empty-or-ass-expr    : formal-arg-list ASSIGN expr\n\t| empty\n    \n    swift-func-defn  :   func-hdr ARROW block\n    \n    app-func-defn  :   C_APP func-hdr LBRACE app-body RBRACE\n    \n    app-body  :  app-arg-expr app-arg-expr-star app-out-star empty-or-semicolon\n    \n    empty-or-semicolon    : SEMICOLON\n\t| empty\n    \n    app-out-star    : std-in-out-err ASSIGN expr app-out-star\n\t|\n    \n    std-in-out-err  : E_STDIN\n                   | E_STDOUT\n                   | E_STDERR\n    \n    app-arg-expr-star   : app-arg-expr app-arg-expr-star\n\t|\n    \n    foreign-func-defn  :   func-hdr foreign-func-body\n    \n    foreign-func-body  :  STR_LITERAL STR_LITERAL empty-or-literal empty-or-more-literals\n    \n    empty-or-literal    : STR_LITERAL\n\t| empty\n    \n    empty-or-more-literals  : LBRACKET single-or-multiple-literal  RBRACKET\n\t| empty\n    \n    single-or-multiple-literal  : STR_LITERAL\n                               | MUL_STR_LITERAL\n    \n    var-decl  :  type-prefix var-decl-rest\n    \n    var-decl-rest-star  : COMMA var-decl-rest var-decl-rest-star\n\t|\n    \n    var-decl-rest  :  var-name type-suffix empty-or-var-mapping empty-or-assign-expr\n    \n    empty :\n    \n    empty-or-var-mapping : var-mapping\n                        | empty\n    \n    empty-or-assign-expr    : ASSIGN expr\n\t                        | empty\n    \n    type-prefix  :  type-name\n                | param-type\n    \n    param-type  :  type-name LESS standalone-type GREATER\n    \n    type-suffix  : LBRACKET empty-or-standalone-type RBRACKET type-suffix\n\t| empty\n    \n    empty-or-standalone-type : standalone-type\n\t| empty\n    \n    standalone-type  :  type-prefix type-suffix\n    \n    var-mapping  :  LESS expr GREATER\n    \n    block  :  LBRACE translation-unit RBRACE\n    \n    stmt-chain  :  chainable-stmt semicolon-or-arrow statement\n    \n    semicolon-or-arrow  : SEMICOLON\n                       | ARROW\n    \n    chainable-stmt  :  var-name\n                     | func-call\n                     | var-decl\n                     | assignment\n    \n    assignment  :  lval-or-paren-lval assign-or-plusas expr-list\n    \n    lval-or-lval-list   : lval-list\n                       | LPAREN lval-list RPAREN\n    \n    assign-or-plusas    : ASSIGN\n                       | PLUS_AS\n    \n    lval-or-paren-lval  :   lval-list\n                       | LPAREN lval-list RPAREN\n    \n    update-stmt  :  var-name LESS ID GREATER UPD expr SEMICOLON\n    \n    if-stmt  :  S_IF LPAREN expr RPAREN block opt-else-block\n    \n    opt-else-block   : S_ELSE block\n\t| empty\n    \n    switch-stmt  :  S_SWITCH LPAREN expr RPAREN LBRACE case-star opt-default RBRACE\n    \n    opt-default : S_DEFAULT\n\t| empty\n    \n    case-star   : case case-star\n\t| empty\n    \n    case  :  S_CASE INT COLON translation-unit\n    \n    default  :  S_DEFAULT COLON translation-unit\n    \n    wait-stmt  :  E_WAIT opt-deep LPAREN expr-list RPAREN block\n    \n    opt-deep    : E_DEEP\n\t| empty\n    \n    foreach-loop  :   S_FOREACH var-name opt-comma-var-name S_IN expr block\n    \n    opt-comma-var-name  : COMMA var-name\n\t| empty\n    \n    for-loop  :   S_FOR LPAREN for-init-list SEMICOLON expr SEMICOLON for-update-list RPAREN block\n    \n    while-loop  :    S_WHILE LPAREN expr RPAREN block\n    \n    for-init-list  :  for-init for-init-star\n    \n    for-init-star   : COMMA for-init for-init-star\n\t                | empty\n    \n    for-init  :  for-assignment\n             | type-prefix var-name type-suffix ASSIGN expr\n    \n    for-update-list  :  for-assignment for-assignment-star\n    \n    for-assignment-star : COMMA for-assignment for-assignment-star\n\t| empty\n    \n    for-assignment  :  var-name ASSIGN expr\n    \n    iterate-loop  :  S_ITERATE var-name block S_UNTIL LPAREN expr RPAREN\n    \n    expr  :  or-expr\n    \n    or-expr  :  and-expr\n            | or-expr LOG_OR and-expr\n    \n    and-expr  :  eq-expr\n             | and-expr LOG_AND eq-expr\n    \n    eq-expr  :  cmp-expr\n            | eq-expr eq-or-not-eq eq-expr\n    \n    eq-or-not-eq    : EQUAL\n                   | NOT_EQUAL\n    \n    cmp-expr  :  add-expr\n             | cmp-expr cmp-sign add-expr\n    \n    cmp-sign        : LESS\n                   | LESS_EQ\n                   | EQUAL\n                   | GREATER\n                   | GREATER_EQ\n    \n    add-expr  :  mult-expr\n             | add-expr add-sign mult-expr\n    \n    add-sign    : PLUS\n               | MINUS\n    \n    mult-expr  :  unary-expr\n              | mult-expr mult-sign unary-expr\n    \n    mult-sign   : MULT\n               | DIV\n               | MULTPER\n               | DOUBLEPER\n               | MOD\n    \n    unary-expr  :  postfix-expr\n                 | minus-or-excl postfix-expr\n    \n    minus-or-excl   : MINUS\n                   | EXCLAMATION\n    \n    postfix-expr  :  base-expr\n                 | postfix-expr array-or-struct\n    \n    array-or-struct : array-subscript\n                   | struct-subscript\n    \n    array-subscript  :  LBRACKET expr RBRACKET\n    \n    struct-subscript  :  DOT ID\n    \n    base-expr  :  literal\n                | func-call\n                | var-name\n                | LPAREN expr RPAREN\n                | -constructor\n                | array-constructor\n    \n    func-call  :   ID LPAREN func-call-arg-list RPAREN\n    \n    func-call-arg-list  :  expr-or-kw func-call-arg-star\n    \n    func-call-arg-star  : COMMA expr-or-kw func-call-arg-star\n\t| empty\n    \n    expr-or-kw  :   expr\n               |   kw-expr\n               | empty\n    \n    -constructor  :  LPAREN expr COMMA expr comma-expr-star RPAREN\n    \n    comma-expr-star : COMMA expr comma-expr-star\n\t| empty\n    \n    array-constructor  :  array-list-constructor\n                      | array-range-constructor\n                      | array-kv-constructor\n    \n    array-list-constructor  :  LBRACKET opt-expr-list RBRACKET\n    \n    opt-expr-list    : expr-list\n\t| empty\n    \n    array-range-constructor  :  LBRACKET expr COLON expr opt-coloned-expr RBRACKET\n    \n    opt-coloned-expr    : COLON expr\n\t| empty\n    \n    array-kv-constructor  :  LBRACE opt-array-constructor RBRACE\n    \n    opt-array-constructor   : array-kv-elem comma-array-kv-elem-star\n\t| empty\n    \n    comma-array-kv-elem-star    : COMMA array-kv-elem comma-array-kv-elem-star\n\t| empty\n    \n    array-kv-elem  :  expr COLON expr\n    \n    kw-expr  :  ID ASSIGN expr\n    \n    literal  :  STR_LITERAL\n            | MUL_STR_LITERAL\n            | INT\n            | float-literal\n            | bool-literal\n    \n    float-literal  :   DOUBLE\n                    | INF\n                    | NAN\n    \n    bool-literal  :  E_TRUE\n                 | E_FALSE\n    \n    expr-list  :  expr\n    \n    type-name  :  class_INT\n              | class_DOUBLE\n              | class_FLOAT\n              | class_VOID\n              | class_UINT\n              | class_BOOL\n              | class_CHARACTER\n              | class_String\n              | collection_SET\n              | collection_ARRAY\n              | collection_DICT\n              | ID\n    \n    const-name  :   ID\n    \n    var-name  :     ID\n    \n    lval-list  :  lval-expr lval-expr-star\n    \n    lval-expr-star  : COMMA lval-expr lval-expr-star\n\t|\n    \n    lval-expr  :  var-name subscript-star\n    \n    subscript-star   : array-subscript  subscript-star\n                    | struct-subscript subscript-star\n                    | empty\n    \n    app-arg-expr  :   opt-at var-name\n                   | literal\n                   | array-constructor\n                   | LPAREN expr RPAREN\n    \n    opt-at  : AT\n\t| empty\n    '
    
_lr_action_items = {'SEMICOLON':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,42,72,73,74,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,148,149,150,152,159,167,168,169,173,175,178,179,180,181,182,183,196,217,218,219,220,226,227,228,230,240,242,245,246,247,254,255,256,258,260,261,275,277,278,279,280,281,282,283,285,290,293,297,298,300,301,303,305,306,308,310,311,312,313,314,324,330,335,336,338,340,341,342,347,348,353,357,372,373,374,381,383,384,385,390,393,395,],[5,5,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,5,93,148,149,-29,-227,-72,-76,5,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,226,-25,-26,-27,228,-90,239,-76,-127,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-29,-30,-177,-124,-126,-76,-77,-78,-66,-76,-67,-63,-236,-237,-190,-136,-138,-140,-144,-151,-155,-174,-196,-28,-76,337,-76,-132,-75,-80,-76,-123,-65,-69,-53,-63,-58,-235,357,-106,-116,-119,-125,-79,-89,-84,-62,376,-238,-105,-128,-133,-68,-193,-184,-109,5,-58,-122,-57,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,63,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,393,],[-76,0,-1,-76,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,-2,-227,-72,-76,-76,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,-122,]),'C_GLOBAL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[25,25,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,25,-227,-72,-76,25,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,25,-122,]),'D_IMPORT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[26,26,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,26,-227,-72,-76,26,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,26,-122,]),'C_PRAGMA':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[27,27,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,27,-227,-72,-76,27,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,27,-122,]),'LBRACE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,43,69,75,76,78,81,82,88,89,90,91,92,93,94,95,96,97,98,99,100,102,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,159,163,173,175,178,179,180,181,182,183,184,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,226,228,229,230,232,234,235,237,239,244,245,246,247,248,252,254,255,256,258,260,261,262,267,274,275,276,277,278,279,280,281,282,283,284,285,287,289,293,295,296,301,302,303,305,306,307,308,310,311,312,314,316,317,318,319,330,335,336,339,340,341,342,353,357,358,361,373,374,378,381,383,384,385,386,393,],[32,32,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,32,32,144,144,144,144,-227,144,-72,-76,144,32,32,-92,-93,-107,144,-101,-102,32,-64,184,144,-134,-135,-137,-139,-143,-150,-154,-161,144,-165,-163,-164,-171,-172,-173,144,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,144,-170,-25,-26,-90,144,-76,-85,-91,-108,-98,-213,-52,-76,144,-169,144,144,144,-141,-142,144,-145,-146,-147,-148,-149,144,-152,-153,144,-156,-157,-158,-159,-160,-166,-167,-168,-162,-24,-30,144,-177,144,32,294,144,144,144,-76,-77,-78,144,32,-66,-76,-67,144,-236,-237,144,-76,144,-190,144,-136,-138,-140,-144,-151,-155,-174,144,-196,144,144,-76,32,32,-75,144,-80,-76,-123,144,-65,-69,-53,144,-235,-35,-34,-36,-41,-106,-116,-119,144,-79,-89,-84,-238,-105,144,144,-133,-68,144,-193,-184,-109,32,32,-122,]),'S_IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[33,33,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,33,-227,-72,-76,33,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,33,-122,]),'S_SWITCH':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[35,35,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,35,-227,-72,-76,35,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,35,-122,]),'E_WAIT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[36,36,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,36,-227,-72,-76,36,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,36,-122,]),'S_FOREACH':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[37,37,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,37,-227,-72,-76,37,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,37,-122,]),'S_FOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[38,38,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,38,-227,-72,-76,38,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,38,-122,]),'S_WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[40,40,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,40,-227,-72,-76,40,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,40,-122,]),'S_ITERATE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[41,41,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,41,-227,-72,-76,41,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,41,-122,]),'S_ELSE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[43,43,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,43,-227,-72,-76,43,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,43,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,43,-122,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,34,37,39,41,47,48,50,51,52,53,54,55,56,57,58,59,60,61,64,69,70,71,75,76,78,81,82,87,88,89,90,92,93,94,95,96,97,98,100,103,104,106,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,151,159,163,165,170,172,173,174,175,178,179,180,181,182,183,184,187,188,189,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,226,228,229,230,232,237,239,241,244,245,246,247,248,254,255,256,258,259,260,261,262,263,264,265,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,287,289,293,301,302,303,305,306,307,308,310,311,312,314,319,321,323,330,335,336,337,339,340,341,342,353,355,357,358,361,373,374,378,381,383,384,385,388,393,],[28,28,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,74,75,-225,-31,-32,-33,28,81,81,81,81,-81,-82,104,-214,-215,-216,-217,-218,-219,-220,-221,-222,-223,-224,107,135,145,147,135,153,135,-227,135,172,-72,-76,135,28,-92,-93,-107,135,-101,-102,-64,147,-76,81,135,-134,-135,-137,-139,-143,-150,-154,-161,135,-165,-163,-164,-171,-172,-173,135,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,135,-170,-225,-25,-26,227,-90,135,81,81,-225,-76,147,-85,-91,-108,-98,-213,-52,-76,-76,267,-76,-42,-169,135,135,135,-141,-142,135,-145,-146,-147,-148,-149,135,-152,-153,135,-156,-157,-158,-159,-160,-166,-167,-168,-162,-24,-30,135,-177,153,135,135,172,135,-76,-77,-78,135,-66,-76,-67,-76,81,-236,-237,135,-239,-240,-83,-49,81,-48,135,-190,135,-136,-138,-140,-144,-151,-155,-174,135,-196,135,135,-76,-75,135,-80,-76,-123,135,-65,-69,-53,-76,-235,-41,-76,147,-106,-116,-119,81,135,-79,-89,-84,-238,-49,-105,135,135,-133,-68,135,-193,-184,-109,28,81,-122,]),'C_APP':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[46,46,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,46,-227,-72,-76,46,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,46,-122,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,35,36,38,40,69,75,76,78,81,82,83,84,85,88,89,90,92,93,94,95,96,97,98,100,104,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,153,159,163,173,175,178,179,180,181,182,183,184,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,226,228,229,230,232,237,239,244,245,246,247,248,253,254,255,256,258,260,261,262,267,274,275,276,277,278,279,280,281,282,283,284,285,287,289,293,301,302,303,305,306,307,308,310,311,312,314,330,335,336,339,340,341,342,353,357,358,361,373,374,378,381,383,384,385,393,],[34,34,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,76,-31,-32,-33,34,78,82,-76,87,90,127,127,127,127,-227,127,163,-117,-118,-72,-76,127,34,-92,-93,-107,127,-101,-102,-64,188,127,-134,-135,-137,-139,-143,-150,-154,-161,127,-165,-163,-164,-171,-172,-173,127,-175,-176,-203,-204,-205,-206,-207,76,-187,-188,-189,-208,-209,-210,-211,-212,127,-170,-25,-26,76,-90,127,-76,-85,-91,-108,-98,-213,-52,-76,262,-169,127,127,127,-141,-142,127,-145,-146,-147,-148,-149,127,-152,-153,127,-156,-157,-158,-159,-160,-166,-167,-168,-162,-24,-30,127,-177,127,127,127,127,-76,-77,-78,127,307,-66,-76,-67,262,-236,-237,127,188,127,-190,127,-136,-138,-140,-144,-151,-155,-174,127,-196,127,127,-76,-75,127,-80,-76,-123,127,-65,-69,-53,262,-235,-106,-116,-119,127,-79,-89,-84,-238,-105,127,127,-133,-68,127,-193,-184,-109,34,-122,]),'D_FUNCTION':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,46,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[50,50,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,50,50,-227,-72,-76,50,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,50,-122,]),'class_INT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[51,51,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,51,51,-227,51,-72,-76,51,-92,-93,-107,-64,51,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,51,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,51,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,51,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,51,-122,]),'class_DOUBLE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[52,52,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,52,52,-227,52,-72,-76,52,-92,-93,-107,-64,52,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,52,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,52,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,52,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,52,-122,]),'class_FLOAT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[53,53,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,53,53,-227,53,-72,-76,53,-92,-93,-107,-64,53,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,53,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,53,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,53,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,53,-122,]),'class_VOID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[54,54,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,54,54,-227,54,-72,-76,54,-92,-93,-107,-64,54,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,54,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,54,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,54,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,54,-122,]),'class_UINT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[55,55,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,55,55,-227,55,-72,-76,55,-92,-93,-107,-64,55,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,55,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,55,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,55,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,55,-122,]),'class_BOOL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[56,56,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,56,56,-227,56,-72,-76,56,-92,-93,-107,-64,56,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,56,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,56,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,56,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,56,-122,]),'class_CHARACTER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[57,57,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,57,57,-227,57,-72,-76,57,-92,-93,-107,-64,57,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,57,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,57,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,57,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,57,-122,]),'class_String':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[58,58,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,58,58,-227,58,-72,-76,58,-92,-93,-107,-64,58,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,58,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,58,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,58,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,58,-122,]),'collection_SET':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[59,59,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,59,59,-227,59,-72,-76,59,-92,-93,-107,-64,59,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,59,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,59,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,59,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,59,-122,]),'collection_ARRAY':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[60,60,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,60,60,-227,60,-72,-76,60,-92,-93,-107,-64,60,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,60,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,60,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,60,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,60,-122,]),'collection_DICT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,71,81,87,88,89,92,93,94,95,100,103,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,174,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,241,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,301,303,305,306,308,310,311,323,330,335,336,340,341,342,357,373,374,381,383,384,385,393,],[61,61,-108,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,61,61,-227,61,-72,-76,61,-92,-93,-107,-64,61,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,61,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,61,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-75,-80,-76,-123,-65,-69,-53,61,-106,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,61,-122,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,63,77,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,222,223,224,226,228,230,245,246,247,254,255,256,257,258,260,261,275,277,278,279,280,281,282,283,285,286,288,293,294,301,303,305,306,308,310,311,312,313,314,327,328,330,331,332,333,335,336,340,341,342,347,348,353,357,364,365,366,367,368,373,374,375,376,377,381,383,384,385,390,392,393,395,],[-1,-76,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,-76,-2,159,-227,-72,-76,-76,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-76,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,285,-76,-198,-24,-30,-177,-76,-77,-78,-66,-76,-67,311,-63,-236,-237,-190,-136,-138,-140,-144,-151,-155,-174,-196,-197,-200,-76,-76,-75,-80,-76,-123,-65,-69,-53,-63,-58,-235,-76,-201,-106,-76,-76,-113,-116,-119,-79,-89,-84,-62,-76,-238,-105,-199,384,-110,-111,-112,-133,-68,-54,-55,-56,-193,-184,-109,-76,-58,-114,-122,-57,]),'S_CASE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,63,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,294,301,303,305,306,308,310,311,330,332,335,336,340,341,342,357,373,374,381,383,384,385,392,393,],[-1,-76,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,-2,-227,-72,-76,-76,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,334,-75,-80,-76,-123,-65,-69,-53,-106,334,-116,-119,-79,-89,-84,-105,-133,-68,-193,-184,-109,-76,-114,-122,]),'S_DEFAULT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,63,81,88,89,92,93,94,95,100,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,148,149,159,173,175,178,179,180,181,182,183,196,217,218,219,220,226,228,230,245,246,247,254,255,256,275,277,278,279,280,281,282,283,285,293,294,301,303,305,306,308,310,311,330,331,332,333,335,336,340,341,342,357,368,373,374,381,383,384,385,392,393,],[-1,-76,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-227,-31,-32,-33,-2,-227,-72,-76,-76,-92,-93,-107,-64,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-25,-26,-90,-76,-85,-91,-108,-98,-213,-52,-76,-169,-166,-167,-168,-162,-24,-30,-177,-76,-77,-78,-66,-76,-67,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-76,-75,-80,-76,-123,-65,-69,-53,-106,366,-76,-113,-116,-119,-79,-89,-84,-105,-112,-133,-68,-193,-184,-109,-76,-114,-122,]),'ARROW':([16,21,22,23,28,42,45,81,88,89,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,173,175,180,181,196,217,218,219,220,230,245,246,247,267,275,277,278,279,280,281,282,283,285,301,303,305,316,317,318,319,340,341,342,381,383,],[-96,-94,-97,-95,-227,94,99,-227,-72,-76,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-76,-85,-98,-213,-169,-166,-167,-168,-162,-177,-76,-77,-78,-76,-190,-136,-138,-140,-144,-151,-155,-174,-196,-75,-80,-76,-35,-34,-36,-41,-79,-89,-84,-193,-184,]),'LESS':([21,28,47,51,52,53,54,55,56,57,58,59,60,61,81,89,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,153,172,173,175,196,217,218,219,220,230,275,280,281,282,283,285,305,342,381,383,],[64,-225,103,-214,-215,-216,-217,-218,-219,-220,-221,-222,-223,-224,-227,-76,203,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-225,-227,-225,248,-85,-169,-166,-167,-168,-162,-177,-190,-144,-151,-155,-174,-196,-76,-84,-193,-184,]),'LBRACKET':([21,28,47,48,51,52,53,54,55,56,57,58,59,60,61,66,67,69,75,76,78,80,81,82,89,90,96,97,98,110,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,153,163,183,184,186,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,229,230,232,237,239,243,244,248,254,255,256,258,260,261,262,265,274,275,276,283,284,285,287,289,302,305,307,312,314,339,353,358,361,378,381,383,],[69,-227,-81,-82,-214,-215,-216,-217,-218,-219,-220,-221,-222,-223,-224,69,69,110,110,110,110,69,-227,110,174,110,110,-101,-102,110,69,110,-165,-163,-164,-171,-172,-173,110,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,110,-170,-225,-227,110,-76,110,174,-169,110,110,110,-141,-142,110,-145,-146,-147,-148,-149,110,-152,-153,110,-156,-157,-158,-159,-160,-166,-167,-168,69,110,-177,110,110,110,174,110,110,-66,309,-67,110,-236,-237,110,-83,110,-190,110,-174,110,-196,110,110,110,174,110,110,-235,110,-238,110,110,110,-193,-184,]),'DOT':([21,28,66,67,74,80,81,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,227,230,275,283,285,381,383,],[70,-227,70,70,151,70,-227,70,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,70,151,-177,-190,-174,-196,-193,-184,]),'COMMA':([21,28,47,48,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,76,80,81,86,108,109,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,153,155,156,157,158,168,169,190,196,217,218,219,220,221,223,230,232,265,269,275,277,278,279,280,281,282,283,285,291,292,298,300,326,327,328,354,356,371,372,381,382,383,394,],[-76,-227,-81,-82,-214,-215,-216,-217,-218,-219,-220,-221,-222,-223,-224,106,-231,-76,-76,-234,-76,-76,-227,165,-232,-233,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-225,-227,232,-181,-182,-183,241,-127,106,-169,-166,-167,-168,-162,284,287,-177,-76,-83,321,-190,-136,-138,-140,-144,-151,-155,-174,-196,-202,232,241,-132,361,287,-201,321,-47,388,-128,-193,361,-184,388,]),'ASSIGN':([21,28,44,49,62,65,66,67,68,80,81,89,105,108,109,145,153,161,171,172,173,175,190,196,243,245,246,247,273,299,305,341,342,349,350,351,352,],[-76,-227,97,-103,-230,-231,-76,-76,-234,-76,-227,-76,-228,-232,-233,-170,229,-104,244,-227,-76,-85,-230,-169,-76,302,-77,-78,-229,339,-76,-89,-84,378,-59,-60,-61,]),'PLUS_AS':([21,28,44,49,62,65,66,67,68,80,81,105,108,109,145,161,190,196,273,],[-76,-227,98,-103,-230,-231,-76,-76,-234,-76,-227,-228,-232,-233,-170,-104,-230,-169,-229,]),'C_CONST':([25,],[71,]),'STR_LITERAL':([26,45,69,75,76,78,81,82,90,96,97,98,101,110,120,122,123,127,130,131,132,133,134,136,137,138,139,140,141,142,143,144,163,183,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,232,237,239,244,248,258,260,261,262,267,274,275,276,284,285,287,289,302,307,309,312,314,316,317,318,319,339,353,358,361,378,381,],[73,101,130,130,130,130,-227,130,130,130,-101,-102,183,130,130,-163,-164,130,-203,-204,-205,-206,-207,-187,-188,-189,-208,-209,-210,-211,-212,130,130,254,130,130,130,130,-141,-142,130,-145,-146,-147,-148,-149,130,-152,-153,130,-156,-157,-158,-159,-160,130,130,130,130,130,130,130,-236,-237,130,-76,130,-190,130,130,-196,130,130,130,130,345,130,-235,-35,-34,-36,-41,130,-238,130,130,130,-193,]),'E_DEEP':([36,],[84,]),'GREATER':([47,48,51,52,53,54,55,56,57,58,59,60,61,107,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,153,175,185,186,196,217,218,219,220,230,265,266,275,277,278,279,280,281,282,283,285,304,305,342,381,383,],[-81,-82,-214,-215,-216,-217,-218,-219,-220,-221,-222,-223,-224,191,-134,-135,-137,206,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-225,-227,-85,265,-76,-169,-166,-167,-168,-162,-177,-83,-88,-190,-136,-138,-140,-144,-151,-155,-174,-196,341,-76,-84,-193,-184,]),'RBRACKET':([47,48,51,52,53,54,55,56,57,58,59,60,61,110,111,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,174,175,186,192,193,194,195,196,217,218,219,220,230,249,250,251,265,266,275,277,278,279,280,281,282,283,285,305,325,342,344,345,346,359,360,380,381,383,],[-81,-82,-214,-215,-216,-217,-218,-219,-220,-221,-222,-223,-224,-76,196,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-225,-76,-85,-76,275,-213,-191,-192,-169,-166,-167,-168,-162,-177,305,-86,-87,-83,-88,-190,-136,-138,-140,-144,-151,-155,-174,-196,-76,-76,-84,374,-70,-71,381,-195,-194,-193,-184,]),'RPAREN':([47,48,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,76,79,80,81,105,108,109,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,147,153,154,155,156,157,158,160,162,176,181,188,190,196,217,218,219,220,221,230,231,232,233,236,265,268,269,270,273,275,277,278,279,280,281,282,283,285,291,292,300,315,320,322,326,329,343,354,356,362,363,370,371,379,381,382,383,387,389,391,394,396,],[-81,-82,-214,-215,-216,-217,-218,-219,-220,-221,-222,-223,-224,-230,-231,-76,-76,-234,-76,161,-76,-227,-228,-232,-233,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-225,-227,230,-76,-181,-182,-183,234,235,252,-213,-76,-230,-169,-166,-167,-168,-162,283,-177,-178,-76,-180,295,-83,319,-76,-44,-229,-190,-136,-138,-140,-144,-151,-155,-174,-196,-202,-76,-132,353,-43,-46,-76,-179,373,-76,-47,383,-186,386,-76,-45,-193,-76,-184,-129,-131,-185,-76,-130,]),'MINUS':([69,75,76,78,82,90,96,97,98,110,116,117,118,119,121,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,153,163,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,229,230,232,237,239,244,248,262,274,275,276,280,281,282,283,284,285,287,289,302,307,339,358,361,378,381,383,],[122,122,122,122,122,122,122,-101,-102,122,210,-150,-154,-161,-165,-171,-172,-173,122,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,122,-170,-227,122,-169,122,122,122,-141,-142,122,-145,-146,-147,-148,-149,122,-152,-153,122,-156,-157,-158,-159,-160,-166,-167,-168,-162,122,-177,122,122,122,122,122,122,122,-190,122,210,-151,-155,-174,122,-196,122,122,122,122,122,122,122,122,-193,-184,]),'EXCLAMATION':([69,75,76,78,82,90,96,97,98,110,127,144,163,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[123,123,123,123,123,123,123,-101,-102,123,123,123,123,123,123,123,-141,-142,123,-145,-146,-147,-148,-149,123,-152,-153,123,-156,-157,-158,-159,-160,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'MUL_STR_LITERAL':([69,75,76,78,81,82,90,96,97,98,110,120,122,123,127,130,131,132,133,134,136,137,138,139,140,141,142,143,144,163,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,232,237,239,244,248,258,260,261,262,274,275,276,284,285,287,289,302,307,309,312,314,339,353,358,361,378,381,],[131,131,131,131,-227,131,131,131,-101,-102,131,131,-163,-164,131,-203,-204,-205,-206,-207,-187,-188,-189,-208,-209,-210,-211,-212,131,131,131,131,131,131,-141,-142,131,-145,-146,-147,-148,-149,131,-152,-153,131,-156,-157,-158,-159,-160,131,131,131,131,131,131,131,-236,-237,131,131,-190,131,131,-196,131,131,131,131,346,131,-235,131,-238,131,131,131,-193,]),'INT':([69,75,76,78,81,82,90,96,97,98,110,120,122,123,127,130,131,132,133,134,136,137,138,139,140,141,142,143,144,163,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,232,237,239,244,248,258,260,261,262,274,275,276,284,285,287,289,302,307,312,314,334,339,353,358,361,378,381,],[132,132,132,132,-227,132,132,132,-101,-102,132,132,-163,-164,132,-203,-204,-205,-206,-207,-187,-188,-189,-208,-209,-210,-211,-212,132,132,132,132,132,132,-141,-142,132,-145,-146,-147,-148,-149,132,-152,-153,132,-156,-157,-158,-159,-160,132,132,132,132,132,132,132,-236,-237,132,132,-190,132,132,-196,132,132,132,132,132,-235,369,132,-238,132,132,132,-193,]),'DOUBLE':([69,75,76,78,81,82,90,96,97,98,110,120,122,123,127,130,131,132,133,134,136,137,138,139,140,141,142,143,144,163,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,232,237,239,244,248,258,260,261,262,274,275,276,284,285,287,289,302,307,312,314,339,353,358,361,378,381,],[139,139,139,139,-227,139,139,139,-101,-102,139,139,-163,-164,139,-203,-204,-205,-206,-207,-187,-188,-189,-208,-209,-210,-211,-212,139,139,139,139,139,139,-141,-142,139,-145,-146,-147,-148,-149,139,-152,-153,139,-156,-157,-158,-159,-160,139,139,139,139,139,139,139,-236,-237,139,139,-190,139,139,-196,139,139,139,139,139,-235,139,-238,139,139,139,-193,]),'INF':([69,75,76,78,81,82,90,96,97,98,110,120,122,123,127,130,131,132,133,134,136,137,138,139,140,141,142,143,144,163,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,232,237,239,244,248,258,260,261,262,274,275,276,284,285,287,289,302,307,312,314,339,353,358,361,378,381,],[140,140,140,140,-227,140,140,140,-101,-102,140,140,-163,-164,140,-203,-204,-205,-206,-207,-187,-188,-189,-208,-209,-210,-211,-212,140,140,140,140,140,140,-141,-142,140,-145,-146,-147,-148,-149,140,-152,-153,140,-156,-157,-158,-159,-160,140,140,140,140,140,140,140,-236,-237,140,140,-190,140,140,-196,140,140,140,140,140,-235,140,-238,140,140,140,-193,]),'NAN':([69,75,76,78,81,82,90,96,97,98,110,120,122,123,127,130,131,132,133,134,136,137,138,139,140,141,142,143,144,163,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,232,237,239,244,248,258,260,261,262,274,275,276,284,285,287,289,302,307,312,314,339,353,358,361,378,381,],[141,141,141,141,-227,141,141,141,-101,-102,141,141,-163,-164,141,-203,-204,-205,-206,-207,-187,-188,-189,-208,-209,-210,-211,-212,141,141,141,141,141,141,-141,-142,141,-145,-146,-147,-148,-149,141,-152,-153,141,-156,-157,-158,-159,-160,141,141,141,141,141,141,141,-236,-237,141,141,-190,141,141,-196,141,141,141,141,141,-235,141,-238,141,141,141,-193,]),'E_TRUE':([69,75,76,78,81,82,90,96,97,98,110,120,122,123,127,130,131,132,133,134,136,137,138,139,140,141,142,143,144,163,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,232,237,239,244,248,258,260,261,262,274,275,276,284,285,287,289,302,307,312,314,339,353,358,361,378,381,],[142,142,142,142,-227,142,142,142,-101,-102,142,142,-163,-164,142,-203,-204,-205,-206,-207,-187,-188,-189,-208,-209,-210,-211,-212,142,142,142,142,142,142,-141,-142,142,-145,-146,-147,-148,-149,142,-152,-153,142,-156,-157,-158,-159,-160,142,142,142,142,142,142,142,-236,-237,142,142,-190,142,142,-196,142,142,142,142,142,-235,142,-238,142,142,142,-193,]),'E_FALSE':([69,75,76,78,81,82,90,96,97,98,110,120,122,123,127,130,131,132,133,134,136,137,138,139,140,141,142,143,144,163,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,232,237,239,244,248,258,260,261,262,274,275,276,284,285,287,289,302,307,312,314,339,353,358,361,378,381,],[143,143,143,143,-227,143,143,143,-101,-102,143,143,-163,-164,143,-203,-204,-205,-206,-207,-187,-188,-189,-208,-209,-210,-211,-212,143,143,143,143,143,143,-141,-142,143,-145,-146,-147,-148,-149,143,-152,-153,143,-156,-157,-158,-159,-160,143,143,143,143,143,143,143,-236,-237,143,143,-190,143,143,-196,143,143,143,143,143,-235,143,-238,143,143,143,-193,]),'S_IN':([81,86,164,166,238,],[-227,-76,237,-121,-120,]),'AT':([81,130,131,132,133,134,136,137,138,139,140,141,142,143,184,258,260,261,275,285,312,314,353,381,],[-227,-203,-204,-205,-206,-207,-187,-188,-189,-208,-209,-210,-211,-212,263,263,-236,-237,-190,-196,263,-235,-238,-193,]),'E_STDIN':([81,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,196,217,218,219,220,230,258,260,261,275,277,278,279,280,281,282,283,285,312,313,314,347,353,381,383,390,],[-227,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-169,-166,-167,-168,-162,-177,-63,-236,-237,-190,-136,-138,-140,-144,-151,-155,-174,-196,-63,350,-235,-62,-238,-193,-184,350,]),'E_STDOUT':([81,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,196,217,218,219,220,230,258,260,261,275,277,278,279,280,281,282,283,285,312,313,314,347,353,381,383,390,],[-227,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-169,-166,-167,-168,-162,-177,-63,-236,-237,-190,-136,-138,-140,-144,-151,-155,-174,-196,-63,351,-235,-62,-238,-193,-184,351,]),'E_STDERR':([81,112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,196,217,218,219,220,230,258,260,261,275,277,278,279,280,281,282,283,285,312,313,314,347,353,381,383,390,],[-227,-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-169,-166,-167,-168,-162,-177,-63,-236,-237,-190,-136,-138,-140,-144,-151,-155,-174,-196,-63,352,-235,-62,-238,-193,-184,352,]),'COLON':([112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,193,196,217,218,219,220,225,230,275,277,278,279,280,281,282,283,285,325,369,381,383,],[-134,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,276,-169,-166,-167,-168,-162,289,-177,-190,-136,-138,-140,-144,-151,-155,-174,-196,358,385,-193,-184,]),'LOG_OR':([112,113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,277,278,279,280,281,282,283,285,381,383,],[197,-135,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,-136,-138,-140,-144,-151,-155,-174,-196,-193,-184,]),'LOG_AND':([113,114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,277,278,279,280,281,282,283,285,381,383,],[198,-137,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,198,-138,-140,-144,-151,-155,-174,-196,-193,-184,]),'EQUAL':([114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,278,279,280,281,282,283,285,381,383,],[200,205,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,200,200,-144,-151,-155,-174,-196,-193,-184,]),'NOT_EQUAL':([114,115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,278,279,280,281,282,283,285,381,383,],[201,-139,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,201,201,-144,-151,-155,-174,-196,-193,-184,]),'LESS_EQ':([115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,280,281,282,283,285,381,383,],[204,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,-144,-151,-155,-174,-196,-193,-184,]),'GREATER_EQ':([115,116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,280,281,282,283,285,381,383,],[207,-143,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,-144,-151,-155,-174,-196,-193,-184,]),'PLUS':([116,117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,280,281,282,283,285,381,383,],[209,-150,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,209,-151,-155,-174,-196,-193,-184,]),'MULT':([117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,281,282,283,285,381,383,],[212,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,212,-155,-174,-196,-193,-184,]),'DIV':([117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,281,282,283,285,381,383,],[213,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,213,-155,-174,-196,-193,-184,]),'MULTPER':([117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,281,282,283,285,381,383,],[214,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,214,-155,-174,-196,-193,-184,]),'DOUBLEPER':([117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,281,282,283,285,381,383,],[215,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,215,-155,-174,-196,-193,-184,]),'MOD':([117,118,119,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,153,196,217,218,219,220,230,275,281,282,283,285,381,383,],[216,-154,-161,-165,-171,-172,-173,-175,-176,-203,-204,-205,-206,-207,-227,-187,-188,-189,-208,-209,-210,-211,-212,-170,-227,-169,-166,-167,-168,-162,-177,-190,216,-155,-174,-196,-193,-184,]),'S_UNTIL':([159,177,],[-90,253,]),'RANGE':([188,321,],[272,272,]),'UPD':([191,],[274,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation-unit':([0,32,385,],[1,77,392,]),'statement-star':([0,3,32,385,],[2,63,2,2,]),'statement':([0,3,32,92,385,],[3,3,3,178,3,]),'empty':([0,3,21,32,36,66,67,76,80,86,89,92,104,110,144,155,168,173,174,183,184,186,188,223,232,243,245,255,258,267,269,292,293,294,298,305,312,321,325,326,327,331,332,348,354,371,382,385,394,],[4,4,68,4,85,68,68,158,68,166,175,179,189,195,224,233,242,247,251,256,264,175,270,288,158,175,303,310,264,318,322,233,179,333,242,175,264,355,360,363,288,367,333,377,322,389,363,4,389,]),'global-const-defn':([0,3,32,92,385,],[6,6,6,6,6,]),'import-stmt':([0,3,32,92,385,],[7,7,7,7,7,]),'pragma-stmt':([0,3,32,92,385,],[8,8,8,8,8,]),'func-defn':([0,3,32,92,385,],[9,9,9,9,9,]),'block':([0,3,32,43,91,92,99,234,252,295,296,385,386,],[10,10,10,95,177,10,182,293,306,335,336,10,393,]),'if-stmt':([0,3,32,92,385,],[11,11,11,11,11,]),'switch-stmt':([0,3,32,92,385,],[12,12,12,12,12,]),'wait-stmt':([0,3,32,92,385,],[13,13,13,13,13,]),'foreach-loop':([0,3,32,92,385,],[14,14,14,14,14,]),'for-loop':([0,3,32,92,385,],[15,15,15,15,15,]),'var-decl':([0,3,32,71,92,385,],[16,16,16,146,16,16,]),'while-loop':([0,3,32,92,385,],[17,17,17,17,17,]),'iterate-loop':([0,3,32,92,385,],[18,18,18,18,18,]),'stmt-chain':([0,3,32,92,385,],[19,19,19,19,19,]),'opt-else-block':([0,3,32,92,293,385,],[20,20,20,20,330,20,]),'var-name':([0,3,32,34,37,39,41,69,75,76,78,82,87,90,92,96,106,110,120,127,144,163,165,170,197,198,199,202,208,211,229,232,237,239,241,244,248,259,262,271,274,276,284,287,289,302,307,337,339,358,361,378,385,388,],[21,21,21,80,86,89,91,126,126,126,126,126,171,126,21,126,80,126,126,126,126,126,238,243,126,126,126,126,126,126,126,126,126,126,171,126,126,314,126,323,126,126,126,126,126,126,126,171,126,126,126,126,21,171,]),'assignment':([0,3,32,92,385,],[22,22,22,22,22,]),'func-call':([0,3,32,69,75,76,78,82,90,92,96,110,120,127,144,163,197,198,199,202,208,211,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,385,],[23,23,23,125,125,125,125,125,125,23,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,23,]),'update-stmt':([0,3,32,92,385,],[24,24,24,24,24,]),'swift-func-defn':([0,3,32,92,385,],[29,29,29,29,29,]),'app-func-defn':([0,3,32,92,385,],[30,30,30,30,30,]),'foreign-func-defn':([0,3,32,92,385,],[31,31,31,31,31,]),'type-prefix':([0,3,32,71,87,92,103,174,241,323,385,],[39,39,39,39,170,39,186,186,170,356,39,]),'chainable-stmt':([0,3,32,92,385,],[42,42,42,42,42,]),'lval-or-paren-lval':([0,3,32,92,385,],[44,44,44,44,44,]),'func-hdr':([0,3,32,46,92,385,],[45,45,45,102,45,45,]),'type-name':([0,3,32,71,87,92,103,174,241,323,385,],[47,47,47,47,47,47,47,47,47,47,47,]),'param-type':([0,3,32,71,87,92,103,174,241,323,385,],[48,48,48,48,48,48,48,48,48,48,48,]),'lval-list':([0,3,32,34,92,385,],[49,49,49,79,49,49,]),'lval-expr':([0,3,32,34,92,106,385,],[62,62,62,62,62,190,62,]),'subscript-star':([21,66,67,80,],[65,108,109,65,]),'array-subscript':([21,66,67,80,119,220,],[66,66,66,66,218,218,]),'struct-subscript':([21,66,67,80,119,220,],[67,67,67,67,219,219,]),'module-path':([26,],[72,]),'opt-deep':([36,],[83,]),'var-decl-rest':([39,],[88,]),'semicolon-or-arrow':([42,],[92,]),'assign-or-plusas':([44,],[96,]),'foreign-func-body':([45,],[100,]),'lval-expr-star':([62,190,],[105,273,]),'expr':([69,75,76,78,82,90,96,110,127,144,163,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[111,152,156,160,162,176,181,193,221,225,181,291,156,296,297,300,304,315,324,325,326,225,328,340,343,372,380,382,390,]),'or-expr':([69,75,76,78,82,90,96,110,127,144,163,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'and-expr':([69,75,76,78,82,90,96,110,127,144,163,197,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[113,113,113,113,113,113,113,113,113,113,113,277,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'eq-expr':([69,75,76,78,82,90,96,110,127,144,163,197,198,199,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[114,114,114,114,114,114,114,114,114,114,114,114,278,279,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'cmp-expr':([69,75,76,78,82,90,96,110,127,144,163,197,198,199,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'add-expr':([69,75,76,78,82,90,96,110,127,144,163,197,198,199,202,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,280,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'mult-expr':([69,75,76,78,82,90,96,110,127,144,163,197,198,199,202,208,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,281,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'unary-expr':([69,75,76,78,82,90,96,110,127,144,163,197,198,199,202,208,211,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,282,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'postfix-expr':([69,75,76,78,82,90,96,110,120,127,144,163,197,198,199,202,208,211,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[119,119,119,119,119,119,119,119,220,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'minus-or-excl':([69,75,76,78,82,90,96,110,127,144,163,197,198,199,202,208,211,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'base-expr':([69,75,76,78,82,90,96,110,120,127,144,163,197,198,199,202,208,211,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'literal':([69,75,76,78,82,90,96,110,120,127,144,163,184,197,198,199,202,208,211,229,232,237,239,244,248,258,262,274,276,284,287,289,302,307,312,339,358,361,378,],[124,124,124,124,124,124,124,124,124,124,124,124,260,124,124,124,124,124,124,124,124,124,124,124,124,260,124,124,124,124,124,124,124,124,260,124,124,124,124,]),'-constructor':([69,75,76,78,82,90,96,110,120,127,144,163,197,198,199,202,208,211,229,232,237,239,244,248,262,274,276,284,287,289,302,307,339,358,361,378,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'array-constructor':([69,75,76,78,82,90,96,110,120,127,144,163,184,197,198,199,202,208,211,229,232,237,239,244,248,258,262,274,276,284,287,289,302,307,312,339,358,361,378,],[129,129,129,129,129,129,129,129,129,129,129,129,261,129,129,129,129,129,129,129,129,129,129,129,129,261,129,129,129,129,129,129,129,129,261,129,129,129,129,]),'float-literal':([69,75,76,78,82,90,96,110,120,127,144,163,184,197,198,199,202,208,211,229,232,237,239,244,248,258,262,274,276,284,287,289,302,307,312,339,358,361,378,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'bool-literal':([69,75,76,78,82,90,96,110,120,127,144,163,184,197,198,199,202,208,211,229,232,237,239,244,248,258,262,274,276,284,287,289,302,307,312,339,358,361,378,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'array-list-constructor':([69,75,76,78,82,90,96,110,120,127,144,163,184,197,198,199,202,208,211,229,232,237,239,244,248,258,262,274,276,284,287,289,302,307,312,339,358,361,378,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'array-range-constructor':([69,75,76,78,82,90,96,110,120,127,144,163,184,197,198,199,202,208,211,229,232,237,239,244,248,258,262,274,276,284,287,289,302,307,312,339,358,361,378,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'array-kv-constructor':([69,75,76,78,82,90,96,110,120,127,144,163,184,197,198,199,202,208,211,229,232,237,239,244,248,258,262,274,276,284,287,289,302,307,312,339,358,361,378,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'path-star':([74,227,],[150,290,]),'func-call-arg-list':([76,],[154,]),'expr-or-kw':([76,232,],[155,292,]),'kw-expr':([76,232,],[157,157,]),'opt-comma-var-name':([86,],[164,]),'for-init-list':([87,],[167,]),'for-init':([87,241,],[168,298,]),'for-assignment':([87,241,337,388,],[169,169,371,394,]),'type-suffix':([89,186,243,305,],[173,266,299,342,]),'expr-list':([96,110,163,],[180,194,236,]),'standalone-type':([103,174,],[185,250,]),'formal-arg-list':([104,267,],[187,316,]),'opt-expr-list':([110,],[192,]),'eq-or-not-eq':([114,278,279,],[199,199,199,]),'cmp-sign':([115,],[202,]),'add-sign':([116,280,],[208,208,]),'mult-sign':([117,281,],[211,211,]),'array-or-struct':([119,220,],[217,217,]),'opt-array-constructor':([144,],[222,]),'array-kv-elem':([144,287,],[223,327,]),'func-call-arg-star':([155,292,],[231,329,]),'for-init-star':([168,298,],[240,338,]),'empty-or-var-mapping':([173,],[245,]),'var-mapping':([173,],[246,]),'empty-or-standalone-type':([174,],[249,]),'empty-or-literal':([183,],[255,]),'app-body':([184,],[257,]),'app-arg-expr':([184,258,312,],[258,312,312,]),'opt-at':([184,258,312,],[259,259,259,]),'opt-formal-args':([188,],[268,]),'formal-arg':([188,321,],[269,354,]),'empty-or-range':([188,321,],[271,271,]),'comma-array-kv-elem-star':([223,327,],[286,364,]),'empty-or-assign-expr':([245,],[301,]),'empty-or-more-literals':([255,],[308,]),'app-arg-expr-star':([258,312,],[313,347,]),'empty-or-arg-list':([267,],[317,]),'comma-args-star':([269,354,],[320,379,]),'case-star':([294,332,],[331,368,]),'case':([294,332,],[332,332,]),'single-or-multiple-literal':([309,],[344,]),'app-out-star':([313,390,],[348,395,]),'std-in-out-err':([313,390,],[349,349,]),'opt-coloned-expr':([325,],[359,]),'comma-expr-star':([326,382,],[362,391,]),'opt-default':([331,],[365,]),'for-update-list':([337,],[370,]),'empty-or-semicolon':([348,],[375,]),'for-assignment-star':([371,394,],[387,396,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation-unit","S'",1,None,None,None),
  ('translation-unit -> statement-star','translation-unit',1,'p_translation_unit','yacc.py',11),
  ('statement-star -> statement statement-star','statement-star',2,'p_statement_star','yacc.py',17),
  ('statement-star -> empty','statement-star',1,'p_statement_star','yacc.py',18),
  ('statement -> SEMICOLON','statement',1,'p_statement','yacc.py',27),
  ('statement -> global-const-defn','statement',1,'p_statement','yacc.py',28),
  ('statement -> import-stmt','statement',1,'p_statement','yacc.py',29),
  ('statement -> pragma-stmt','statement',1,'p_statement','yacc.py',30),
  ('statement -> func-defn','statement',1,'p_statement','yacc.py',31),
  ('statement -> block','statement',1,'p_statement','yacc.py',32),
  ('statement -> if-stmt','statement',1,'p_statement','yacc.py',33),
  ('statement -> switch-stmt','statement',1,'p_statement','yacc.py',34),
  ('statement -> wait-stmt','statement',1,'p_statement','yacc.py',35),
  ('statement -> foreach-loop','statement',1,'p_statement','yacc.py',36),
  ('statement -> for-loop','statement',1,'p_statement','yacc.py',37),
  ('statement -> var-decl','statement',1,'p_statement','yacc.py',38),
  ('statement -> while-loop','statement',1,'p_statement','yacc.py',39),
  ('statement -> iterate-loop','statement',1,'p_statement','yacc.py',40),
  ('statement -> stmt-chain','statement',1,'p_statement','yacc.py',41),
  ('statement -> opt-else-block','statement',1,'p_statement','yacc.py',42),
  ('statement -> var-name','statement',1,'p_statement','yacc.py',43),
  ('statement -> assignment','statement',1,'p_statement','yacc.py',44),
  ('statement -> func-call','statement',1,'p_statement','yacc.py',45),
  ('statement -> update-stmt','statement',1,'p_statement','yacc.py',46),
  ('global-const-defn -> C_GLOBAL C_CONST var-decl SEMICOLON','global-const-defn',4,'p_global_const_defn','yacc.py',52),
  ('import-stmt -> D_IMPORT module-path SEMICOLON','import-stmt',3,'p_import_stmt','yacc.py',58),
  ('import-stmt -> D_IMPORT STR_LITERAL SEMICOLON','import-stmt',3,'p_import_stmt','yacc.py',59),
  ('module-path -> ID path-star','module-path',2,'p_module_path','yacc.py',65),
  ('path-star -> DOT ID path-star','path-star',3,'p_path_star','yacc.py',71),
  ('path-star -> <empty>','path-star',0,'p_path_star','yacc.py',72),
  ('pragma-stmt -> C_PRAGMA ID expr SEMICOLON','pragma-stmt',4,'p_pragma_stms','yacc.py',81),
  ('func-defn -> swift-func-defn','func-defn',1,'p_func_defn','yacc.py',87),
  ('func-defn -> app-func-defn','func-defn',1,'p_func_defn','yacc.py',88),
  ('func-defn -> foreign-func-defn','func-defn',1,'p_func_defn','yacc.py',89),
  ('func-hdr -> D_FUNCTION ID formal-arg-list ID empty-or-arg-list','func-hdr',5,'p_func_hdr','yacc.py',95),
  ('empty-or-arg-list -> formal-arg-list','empty-or-arg-list',1,'p_empty_or_arg_list','yacc.py',101),
  ('empty-or-arg-list -> empty','empty-or-arg-list',1,'p_empty_or_arg_list','yacc.py',102),
  ('type-params -> LESS var-name comma-name-star GREATER','type-params',4,'p_type_params','yacc.py',109),
  ('type-params -> empty','type-params',1,'p_type_params','yacc.py',110),
  ('comma-name-star -> COMMA var-name comma-name-star','comma-name-star',3,'p_comma_name_star','yacc.py',119),
  ('comma-name-star -> empty','comma-name-star',1,'p_comma_name_star','yacc.py',120),
  ('formal-arg-list -> LPAREN opt-formal-args RPAREN','formal-arg-list',3,'p_formal_arg_list','yacc.py',129),
  ('formal-arg-list -> empty','formal-arg-list',1,'p_formal_arg_list','yacc.py',130),
  ('opt-formal-args -> formal-arg comma-args-star','opt-formal-args',2,'p_opt_formal_args','yacc.py',139),
  ('opt-formal-args -> empty','opt-formal-args',1,'p_opt_formal_args','yacc.py',140),
  ('comma-args-star -> COMMA formal-arg comma-args-star','comma-args-star',3,'p_comma_args_star','yacc.py',148),
  ('comma-args-star -> empty','comma-args-star',1,'p_comma_args_star','yacc.py',149),
  ('formal-arg -> empty-or-range var-name type-prefix','formal-arg',3,'p_formal_arg','yacc.py',158),
  ('empty-or-range -> RANGE','empty-or-range',1,'p_empty_or_range','yacc.py',165),
  ('empty-or-range -> empty','empty-or-range',1,'p_empty_or_range','yacc.py',166),
  ('empty-or-ass-expr -> formal-arg-list ASSIGN expr','empty-or-ass-expr',3,'p_empty_or_ass_expr','yacc.py',172),
  ('empty-or-ass-expr -> empty','empty-or-ass-expr',1,'p_empty_or_ass_expr','yacc.py',173),
  ('swift-func-defn -> func-hdr ARROW block','swift-func-defn',3,'p_swift_func_defn','yacc.py',179),
  ('app-func-defn -> C_APP func-hdr LBRACE app-body RBRACE','app-func-defn',5,'p_app_func_defn','yacc.py',186),
  ('app-body -> app-arg-expr app-arg-expr-star app-out-star empty-or-semicolon','app-body',4,'p_app_body','yacc.py',193),
  ('empty-or-semicolon -> SEMICOLON','empty-or-semicolon',1,'p_empty_or_semicolon','yacc.py',199),
  ('empty-or-semicolon -> empty','empty-or-semicolon',1,'p_empty_or_semicolon','yacc.py',200),
  ('app-out-star -> std-in-out-err ASSIGN expr app-out-star','app-out-star',4,'p_app_out_star','yacc.py',207),
  ('app-out-star -> <empty>','app-out-star',0,'p_app_out_star','yacc.py',208),
  ('std-in-out-err -> E_STDIN','std-in-out-err',1,'p_std_in_out_err','yacc.py',218),
  ('std-in-out-err -> E_STDOUT','std-in-out-err',1,'p_std_in_out_err','yacc.py',219),
  ('std-in-out-err -> E_STDERR','std-in-out-err',1,'p_std_in_out_err','yacc.py',220),
  ('app-arg-expr-star -> app-arg-expr app-arg-expr-star','app-arg-expr-star',2,'p_app_arg_expr_star','yacc.py',227),
  ('app-arg-expr-star -> <empty>','app-arg-expr-star',0,'p_app_arg_expr_star','yacc.py',228),
  ('foreign-func-defn -> func-hdr foreign-func-body','foreign-func-defn',2,'p_foreign_func_defn','yacc.py',237),
  ('foreign-func-body -> STR_LITERAL STR_LITERAL empty-or-literal empty-or-more-literals','foreign-func-body',4,'p_foreign_func_body','yacc.py',243),
  ('empty-or-literal -> STR_LITERAL','empty-or-literal',1,'p_empty_or_literal','yacc.py',249),
  ('empty-or-literal -> empty','empty-or-literal',1,'p_empty_or_literal','yacc.py',250),
  ('empty-or-more-literals -> LBRACKET single-or-multiple-literal RBRACKET','empty-or-more-literals',3,'p_empty_or_more_literals','yacc.py',256),
  ('empty-or-more-literals -> empty','empty-or-more-literals',1,'p_empty_or_more_literals','yacc.py',257),
  ('single-or-multiple-literal -> STR_LITERAL','single-or-multiple-literal',1,'p_single_or_multistring_literal','yacc.py',266),
  ('single-or-multiple-literal -> MUL_STR_LITERAL','single-or-multiple-literal',1,'p_single_or_multistring_literal','yacc.py',267),
  ('var-decl -> type-prefix var-decl-rest','var-decl',2,'p_var_decl','yacc.py',273),
  ('var-decl-rest-star -> COMMA var-decl-rest var-decl-rest-star','var-decl-rest-star',3,'p_var_decl_rest_star','yacc.py',279),
  ('var-decl-rest-star -> <empty>','var-decl-rest-star',0,'p_var_decl_rest_star','yacc.py',280),
  ('var-decl-rest -> var-name type-suffix empty-or-var-mapping empty-or-assign-expr','var-decl-rest',4,'p_var_decl_rest','yacc.py',289),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',296),
  ('empty-or-var-mapping -> var-mapping','empty-or-var-mapping',1,'p_empty_or_var_mapping','yacc.py',302),
  ('empty-or-var-mapping -> empty','empty-or-var-mapping',1,'p_empty_or_var_mapping','yacc.py',303),
  ('empty-or-assign-expr -> ASSIGN expr','empty-or-assign-expr',2,'p_empty_or_assign_expr','yacc.py',313),
  ('empty-or-assign-expr -> empty','empty-or-assign-expr',1,'p_empty_or_assign_expr','yacc.py',314),
  ('type-prefix -> type-name','type-prefix',1,'p_type_prefix','yacc.py',322),
  ('type-prefix -> param-type','type-prefix',1,'p_type_prefix','yacc.py',323),
  ('param-type -> type-name LESS standalone-type GREATER','param-type',4,'p_param_type','yacc.py',329),
  ('type-suffix -> LBRACKET empty-or-standalone-type RBRACKET type-suffix','type-suffix',4,'p_type_suffix','yacc.py',335),
  ('type-suffix -> empty','type-suffix',1,'p_type_suffix','yacc.py',336),
  ('empty-or-standalone-type -> standalone-type','empty-or-standalone-type',1,'p_empty_or_standalone_type','yacc.py',345),
  ('empty-or-standalone-type -> empty','empty-or-standalone-type',1,'p_empty_or_standalone_type','yacc.py',346),
  ('standalone-type -> type-prefix type-suffix','standalone-type',2,'p_standalone_type','yacc.py',352),
  ('var-mapping -> LESS expr GREATER','var-mapping',3,'p_var_mapping','yacc.py',358),
  ('block -> LBRACE translation-unit RBRACE','block',3,'p_block','yacc.py',364),
  ('stmt-chain -> chainable-stmt semicolon-or-arrow statement','stmt-chain',3,'p_stmt_chain','yacc.py',370),
  ('semicolon-or-arrow -> SEMICOLON','semicolon-or-arrow',1,'p_semicolon_or_arrow','yacc.py',377),
  ('semicolon-or-arrow -> ARROW','semicolon-or-arrow',1,'p_semicolon_or_arrow','yacc.py',378),
  ('chainable-stmt -> var-name','chainable-stmt',1,'p_chainable_stmt','yacc.py',385),
  ('chainable-stmt -> func-call','chainable-stmt',1,'p_chainable_stmt','yacc.py',386),
  ('chainable-stmt -> var-decl','chainable-stmt',1,'p_chainable_stmt','yacc.py',387),
  ('chainable-stmt -> assignment','chainable-stmt',1,'p_chainable_stmt','yacc.py',388),
  ('assignment -> lval-or-paren-lval assign-or-plusas expr-list','assignment',3,'p_assignment','yacc.py',394),
  ('lval-or-lval-list -> lval-list','lval-or-lval-list',1,'p_lval_or_lval_list','yacc.py',401),
  ('lval-or-lval-list -> LPAREN lval-list RPAREN','lval-or-lval-list',3,'p_lval_or_lval_list','yacc.py',402),
  ('assign-or-plusas -> ASSIGN','assign-or-plusas',1,'p_assign_or_plusas','yacc.py',412),
  ('assign-or-plusas -> PLUS_AS','assign-or-plusas',1,'p_assign_or_plusas','yacc.py',413),
  ('lval-or-paren-lval -> lval-list','lval-or-paren-lval',1,'p_lval_or_paren_lval','yacc.py',420),
  ('lval-or-paren-lval -> LPAREN lval-list RPAREN','lval-or-paren-lval',3,'p_lval_or_paren_lval','yacc.py',421),
  ('update-stmt -> var-name LESS ID GREATER UPD expr SEMICOLON','update-stmt',7,'p_update_stmt','yacc.py',431),
  ('if-stmt -> S_IF LPAREN expr RPAREN block opt-else-block','if-stmt',6,'p_if_stmt','yacc.py',437),
  ('opt-else-block -> S_ELSE block','opt-else-block',2,'p_opt_else_block','yacc.py',443),
  ('opt-else-block -> empty','opt-else-block',1,'p_opt_else_block','yacc.py',444),
  ('switch-stmt -> S_SWITCH LPAREN expr RPAREN LBRACE case-star opt-default RBRACE','switch-stmt',8,'p_switch_stmt','yacc.py',453),
  ('opt-default -> S_DEFAULT','opt-default',1,'p_opt_default','yacc.py',459),
  ('opt-default -> empty','opt-default',1,'p_opt_default','yacc.py',460),
  ('case-star -> case case-star','case-star',2,'p_case_star','yacc.py',466),
  ('case-star -> empty','case-star',1,'p_case_star','yacc.py',467),
  ('case -> S_CASE INT COLON translation-unit','case',4,'p_case','yacc.py',476),
  ('default -> S_DEFAULT COLON translation-unit','default',3,'p_default','yacc.py',482),
  ('wait-stmt -> E_WAIT opt-deep LPAREN expr-list RPAREN block','wait-stmt',6,'p_wait_stmt','yacc.py',488),
  ('opt-deep -> E_DEEP','opt-deep',1,'p_opt_deep','yacc.py',494),
  ('opt-deep -> empty','opt-deep',1,'p_opt_deep','yacc.py',495),
  ('foreach-loop -> S_FOREACH var-name opt-comma-var-name S_IN expr block','foreach-loop',6,'p_foreach_loop','yacc.py',501),
  ('opt-comma-var-name -> COMMA var-name','opt-comma-var-name',2,'p_opt_comma_var_name','yacc.py',510),
  ('opt-comma-var-name -> empty','opt-comma-var-name',1,'p_opt_comma_var_name','yacc.py',511),
  ('for-loop -> S_FOR LPAREN for-init-list SEMICOLON expr SEMICOLON for-update-list RPAREN block','for-loop',9,'p_for_loop','yacc.py',519),
  ('while-loop -> S_WHILE LPAREN expr RPAREN block','while-loop',5,'p_while_loop','yacc.py',525),
  ('for-init-list -> for-init for-init-star','for-init-list',2,'p_for_init_list','yacc.py',531),
  ('for-init-star -> COMMA for-init for-init-star','for-init-star',3,'p_for_init_star','yacc.py',537),
  ('for-init-star -> empty','for-init-star',1,'p_for_init_star','yacc.py',538),
  ('for-init -> for-assignment','for-init',1,'p_for_init','yacc.py',547),
  ('for-init -> type-prefix var-name type-suffix ASSIGN expr','for-init',5,'p_for_init','yacc.py',548),
  ('for-update-list -> for-assignment for-assignment-star','for-update-list',2,'p_for_update_list','yacc.py',558),
  ('for-assignment-star -> COMMA for-assignment for-assignment-star','for-assignment-star',3,'p_for_assignment_star','yacc.py',564),
  ('for-assignment-star -> empty','for-assignment-star',1,'p_for_assignment_star','yacc.py',565),
  ('for-assignment -> var-name ASSIGN expr','for-assignment',3,'p_for_assignment','yacc.py',574),
  ('iterate-loop -> S_ITERATE var-name block S_UNTIL LPAREN expr RPAREN','iterate-loop',7,'p_iterate_loop','yacc.py',580),
  ('expr -> or-expr','expr',1,'p_expr','yacc.py',586),
  ('or-expr -> and-expr','or-expr',1,'p_or_expr','yacc.py',592),
  ('or-expr -> or-expr LOG_OR and-expr','or-expr',3,'p_or_expr','yacc.py',593),
  ('and-expr -> eq-expr','and-expr',1,'p_and_expr','yacc.py',602),
  ('and-expr -> and-expr LOG_AND eq-expr','and-expr',3,'p_and_expr','yacc.py',603),
  ('eq-expr -> cmp-expr','eq-expr',1,'p_eq_expr','yacc.py',612),
  ('eq-expr -> eq-expr eq-or-not-eq eq-expr','eq-expr',3,'p_eq_expr','yacc.py',613),
  ('eq-or-not-eq -> EQUAL','eq-or-not-eq',1,'p_eq_or_not_eq','yacc.py',623),
  ('eq-or-not-eq -> NOT_EQUAL','eq-or-not-eq',1,'p_eq_or_not_eq','yacc.py',624),
  ('cmp-expr -> add-expr','cmp-expr',1,'p_cmp_expr','yacc.py',631),
  ('cmp-expr -> cmp-expr cmp-sign add-expr','cmp-expr',3,'p_cmp_expr','yacc.py',632),
  ('cmp-sign -> LESS','cmp-sign',1,'p_cmp_sign','yacc.py',642),
  ('cmp-sign -> LESS_EQ','cmp-sign',1,'p_cmp_sign','yacc.py',643),
  ('cmp-sign -> EQUAL','cmp-sign',1,'p_cmp_sign','yacc.py',644),
  ('cmp-sign -> GREATER','cmp-sign',1,'p_cmp_sign','yacc.py',645),
  ('cmp-sign -> GREATER_EQ','cmp-sign',1,'p_cmp_sign','yacc.py',646),
  ('add-expr -> mult-expr','add-expr',1,'p_add_expr','yacc.py',653),
  ('add-expr -> add-expr add-sign mult-expr','add-expr',3,'p_add_expr','yacc.py',654),
  ('add-sign -> PLUS','add-sign',1,'p_add_sign','yacc.py',664),
  ('add-sign -> MINUS','add-sign',1,'p_add_sign','yacc.py',665),
  ('mult-expr -> unary-expr','mult-expr',1,'p_mult_expr','yacc.py',672),
  ('mult-expr -> mult-expr mult-sign unary-expr','mult-expr',3,'p_mult_expr','yacc.py',673),
  ('mult-sign -> MULT','mult-sign',1,'p_mult_sign','yacc.py',683),
  ('mult-sign -> DIV','mult-sign',1,'p_mult_sign','yacc.py',684),
  ('mult-sign -> MULTPER','mult-sign',1,'p_mult_sign','yacc.py',685),
  ('mult-sign -> DOUBLEPER','mult-sign',1,'p_mult_sign','yacc.py',686),
  ('mult-sign -> MOD','mult-sign',1,'p_mult_sign','yacc.py',687),
  ('unary-expr -> postfix-expr','unary-expr',1,'p_unary_expr','yacc.py',694),
  ('unary-expr -> minus-or-excl postfix-expr','unary-expr',2,'p_unary_expr','yacc.py',695),
  ('minus-or-excl -> MINUS','minus-or-excl',1,'p_minus_or_excl','yacc.py',705),
  ('minus-or-excl -> EXCLAMATION','minus-or-excl',1,'p_minus_or_excl','yacc.py',706),
  ('postfix-expr -> base-expr','postfix-expr',1,'p_postfix_expr','yacc.py',713),
  ('postfix-expr -> postfix-expr array-or-struct','postfix-expr',2,'p_postfix_expr','yacc.py',714),
  ('array-or-struct -> array-subscript','array-or-struct',1,'p_array_or_struct','yacc.py',723),
  ('array-or-struct -> struct-subscript','array-or-struct',1,'p_array_or_struct','yacc.py',724),
  ('array-subscript -> LBRACKET expr RBRACKET','array-subscript',3,'p_array_subscript','yacc.py',730),
  ('struct-subscript -> DOT ID','struct-subscript',2,'p_struct_subscript','yacc.py',736),
  ('base-expr -> literal','base-expr',1,'p_base_expr','yacc.py',742),
  ('base-expr -> func-call','base-expr',1,'p_base_expr','yacc.py',743),
  ('base-expr -> var-name','base-expr',1,'p_base_expr','yacc.py',744),
  ('base-expr -> LPAREN expr RPAREN','base-expr',3,'p_base_expr','yacc.py',745),
  ('base-expr -> -constructor','base-expr',1,'p_base_expr','yacc.py',746),
  ('base-expr -> array-constructor','base-expr',1,'p_base_expr','yacc.py',747),
  ('func-call -> ID LPAREN func-call-arg-list RPAREN','func-call',4,'p_func_call','yacc.py',756),
  ('func-call-arg-list -> expr-or-kw func-call-arg-star','func-call-arg-list',2,'p_func_call_arg_list','yacc.py',763),
  ('func-call-arg-star -> COMMA expr-or-kw func-call-arg-star','func-call-arg-star',3,'p_def_expr_star','yacc.py',769),
  ('func-call-arg-star -> empty','func-call-arg-star',1,'p_def_expr_star','yacc.py',770),
  ('expr-or-kw -> expr','expr-or-kw',1,'p_expr_or_kw','yacc.py',779),
  ('expr-or-kw -> kw-expr','expr-or-kw',1,'p_expr_or_kw','yacc.py',780),
  ('expr-or-kw -> empty','expr-or-kw',1,'p_expr_or_kw','yacc.py',781),
  ('-constructor -> LPAREN expr COMMA expr comma-expr-star RPAREN','-constructor',6,'p__constructor','yacc.py',790),
  ('comma-expr-star -> COMMA expr comma-expr-star','comma-expr-star',3,'p_comma_expr_star','yacc.py',796),
  ('comma-expr-star -> empty','comma-expr-star',1,'p_comma_expr_star','yacc.py',797),
  ('array-constructor -> array-list-constructor','array-constructor',1,'p_array_constructor','yacc.py',806),
  ('array-constructor -> array-range-constructor','array-constructor',1,'p_array_constructor','yacc.py',807),
  ('array-constructor -> array-kv-constructor','array-constructor',1,'p_array_constructor','yacc.py',808),
  ('array-list-constructor -> LBRACKET opt-expr-list RBRACKET','array-list-constructor',3,'p_array_list_constructor','yacc.py',814),
  ('opt-expr-list -> expr-list','opt-expr-list',1,'p_opt_expr_list','yacc.py',820),
  ('opt-expr-list -> empty','opt-expr-list',1,'p_opt_expr_list','yacc.py',821),
  ('array-range-constructor -> LBRACKET expr COLON expr opt-coloned-expr RBRACKET','array-range-constructor',6,'p_array_range_constructor','yacc.py',827),
  ('opt-coloned-expr -> COLON expr','opt-coloned-expr',2,'p_opt_coloned_expr','yacc.py',833),
  ('opt-coloned-expr -> empty','opt-coloned-expr',1,'p_opt_coloned_expr','yacc.py',834),
  ('array-kv-constructor -> LBRACE opt-array-constructor RBRACE','array-kv-constructor',3,'p_array_kv_constructor','yacc.py',842),
  ('opt-array-constructor -> array-kv-elem comma-array-kv-elem-star','opt-array-constructor',2,'p_opt_array_constructor','yacc.py',848),
  ('opt-array-constructor -> empty','opt-array-constructor',1,'p_opt_array_constructor','yacc.py',849),
  ('comma-array-kv-elem-star -> COMMA array-kv-elem comma-array-kv-elem-star','comma-array-kv-elem-star',3,'p_comma_array_kv_elem_star','yacc.py',857),
  ('comma-array-kv-elem-star -> empty','comma-array-kv-elem-star',1,'p_comma_array_kv_elem_star','yacc.py',858),
  ('array-kv-elem -> expr COLON expr','array-kv-elem',3,'p_array_kv_elem','yacc.py',867),
  ('kw-expr -> ID ASSIGN expr','kw-expr',3,'p_kw_expr','yacc.py',874),
  ('literal -> STR_LITERAL','literal',1,'p_literal','yacc.py',880),
  ('literal -> MUL_STR_LITERAL','literal',1,'p_literal','yacc.py',881),
  ('literal -> INT','literal',1,'p_literal','yacc.py',882),
  ('literal -> float-literal','literal',1,'p_literal','yacc.py',883),
  ('literal -> bool-literal','literal',1,'p_literal','yacc.py',884),
  ('float-literal -> DOUBLE','float-literal',1,'p_float_literal','yacc.py',890),
  ('float-literal -> INF','float-literal',1,'p_float_literal','yacc.py',891),
  ('float-literal -> NAN','float-literal',1,'p_float_literal','yacc.py',892),
  ('bool-literal -> E_TRUE','bool-literal',1,'p_bool_literal','yacc.py',899),
  ('bool-literal -> E_FALSE','bool-literal',1,'p_bool_literal','yacc.py',900),
  ('expr-list -> expr','expr-list',1,'p_expr_list','yacc.py',906),
  ('type-name -> class_INT','type-name',1,'p_type_name','yacc.py',913),
  ('type-name -> class_DOUBLE','type-name',1,'p_type_name','yacc.py',914),
  ('type-name -> class_FLOAT','type-name',1,'p_type_name','yacc.py',915),
  ('type-name -> class_VOID','type-name',1,'p_type_name','yacc.py',916),
  ('type-name -> class_UINT','type-name',1,'p_type_name','yacc.py',917),
  ('type-name -> class_BOOL','type-name',1,'p_type_name','yacc.py',918),
  ('type-name -> class_CHARACTER','type-name',1,'p_type_name','yacc.py',919),
  ('type-name -> class_String','type-name',1,'p_type_name','yacc.py',920),
  ('type-name -> collection_SET','type-name',1,'p_type_name','yacc.py',921),
  ('type-name -> collection_ARRAY','type-name',1,'p_type_name','yacc.py',922),
  ('type-name -> collection_DICT','type-name',1,'p_type_name','yacc.py',923),
  ('type-name -> ID','type-name',1,'p_type_name','yacc.py',924),
  ('const-name -> ID','const-name',1,'p_const_name','yacc.py',930),
  ('var-name -> ID','var-name',1,'p_var_name','yacc.py',936),
  ('lval-list -> lval-expr lval-expr-star','lval-list',2,'p_lval_list','yacc.py',942),
  ('lval-expr-star -> COMMA lval-expr lval-expr-star','lval-expr-star',3,'p_lval_expr_star','yacc.py',948),
  ('lval-expr-star -> <empty>','lval-expr-star',0,'p_lval_expr_star','yacc.py',949),
  ('lval-expr -> var-name subscript-star','lval-expr',2,'p_lval_expr','yacc.py',958),
  ('subscript-star -> array-subscript subscript-star','subscript-star',2,'p_subscript_star','yacc.py',964),
  ('subscript-star -> struct-subscript subscript-star','subscript-star',2,'p_subscript_star','yacc.py',965),
  ('subscript-star -> empty','subscript-star',1,'p_subscript_star','yacc.py',966),
  ('app-arg-expr -> opt-at var-name','app-arg-expr',2,'p_app_arg_expr','yacc.py',975),
  ('app-arg-expr -> literal','app-arg-expr',1,'p_app_arg_expr','yacc.py',976),
  ('app-arg-expr -> array-constructor','app-arg-expr',1,'p_app_arg_expr','yacc.py',977),
  ('app-arg-expr -> LPAREN expr RPAREN','app-arg-expr',3,'p_app_arg_expr','yacc.py',978),
  ('opt-at -> AT','opt-at',1,'p_opt_at','yacc.py',989),
  ('opt-at -> empty','opt-at',1,'p_opt_at','yacc.py',990),
]
