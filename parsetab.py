
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND ARROW ASSIGN AT BACKTICK BIT_NOT BIT_OR BIT_XOR COLON COMMA C_APP C_ASSOCIATIVITY C_CONST C_CONVENIENCE C_DID_SET C_DYNAMIC C_FINAL C_GET C_GLOBAL C_INDIRECT C_INFIX C_LAZY C_LEFT C_MUTATING C_NONE C_NONMUTATING C_OPTIONAL C_OVERRIDE C_POSTFIX C_PRAGMA C_PRECEDENCE C_PREFIX C_PROTOCOL C_REQUIRED C_RIGHT C_SET C_TYPE C_TYPEDEF C_UNOWNED C_WEAK C_WILLSET DIV DIV_AS DOT DOUBLE DOUBLEPER D_ASSOCIATED_TYPE D_DEINIT D_ENUM D_EXTENSION D_FILE_PRIVATE D_FUNCTION D_IMPORT D_INIT D_INOUT D_LET D_OPERATOR D_PRIVATE D_PROTOCOL D_PUBLIC D_STATIC D_STRUCT D_SUBSCRIPT D_TYPE_ALIAS D_VAR EQUAL EXCLAMATION E_ANY E_AS E_CATCH E_DEEP E_FALSE E_IS E_NIL E_RETHROWS E_SELF E_SELF_CAPITAL E_STDERR E_STDIN E_STDOUT E_SUPER E_THROW E_THROWS E_TRUE E_TRY E_WAIT GREATER GREATER_EQ HASH HRANGE ID INF INT LBRACE LBRACKET LESS LESS_EQ LOG_AND LOG_OR LPAREN LSHIFT MINUS MINUS_AS MOD MOD_AS MULT MULTPER MULT_AS MUL_STR_LITERAL NAN NOT_EQUAL N_AVAILABLE N_COLOR_LITERAL N_COLUMN N_ELSE N_ELSE_IF N_END_IF N_ERROR N_FILE N_FILE_LITERAL N_FUNCTION N_IF N_IMAGE_LITERAL N_LINE N_SELECTOR N_SOURCE_LOCATION N_WARNING PLUS PLUS_AS P_UNDERSCORE QUESTION RANGE RBRACE RBRACKET RPAREN RSHIFT SEMICOLON STR_LITERAL S_BREAK S_CASE S_CONTINUE S_DEFAULT S_DEFER S_DO S_ELSE S_FALLTHROUGH S_FOR S_FOREACH S_GUARD S_IF S_IN S_ITERATE S_REPEAT S_RETURN S_SWITCH S_UNTIL S_WHERE S_WHILE UPD class_BOOL class_CHARACTER class_DOUBLE class_FLOAT class_INT class_String class_UINT class_VOID collection_ARRAY collection_DICT collection_SET\n    translation-unit  :  statement-star\n    \n    statement-star  :\n                    | statement statement-star\n    \n    statement  :  SEMICOLON\n                | global-const-defn\n                | import-stmt\n                | pragma-stmt\n                | func-defn\n                | block\n                | if-stmt\n                | switch-stmt\n                | wait-stmt\n                | foreach-loop\n                | for-loop\n                | iterate-loop\n                | stmt-chain\n                | update-stmt\n    \n    global-const-defn  :  C_GLOBAL C_CONST var-decl SEMICOLON\n    \n    import-stmt  :  D_IMPORT module-path SEMICOLON\n                 | D_IMPORT STR_LITERAL SEMICOLON\n    \n    module-path  :  ID path-star\n    \n    path-star   :\n                | DOT ID path-star\n    \n    pragma-stmt  :  C_PRAGMA ID expr  SEMICOLON\n    \n    func-defn  :  swift-func-defn\n                | app-func-defn\n                | foreign-func-defn\n    \n    func-hdr  :  type-params formal-arg-list func-name empty-or-arg-list\n    \n    empty-or-arg-list    :\n                         |  formal-arg-list\n    \n    type-params  :\n                 | LESS var-name comma-name-star GREATER\n    \n    comma-name-star :\n                    | COMMA var-name comma-name-star\n    \n    formal-arg-list  :\n                     | LPAREN opt-formal-args RPAREN\n    \n    opt-formal-args :\n                    |   formal-arg comma-args-star\n    \n    comma-args-star :\n                    |    COMMA formal-arg comma-args-star\n    \n    formal-arg  :  type-prefix empty-or-range var-name type-suffix empty-or-ass-expr\n    \n    empty-or-range    :\n                      |  RANGE\n    \n    empty-or-ass-expr    :\n                         |  formal-arg-list ASSIGN expr\n    \n    swift-func-defn  :  annotation-star func-hdr ARROW block\n    \n    annotation-star :\n                    |   annotation annotation-star\n    \n    app-func-defn  :  annotation-star C_APP func-hdr LBRACE app-body RBRACE\n    \n    app-body  :  app-arg-expr app-arg-expr-star app-out-star empty-or-semicolon\n    \n    empty-or-semicolon    :\n                          |  SEMICOLON\n    \n    app-out-star    :\n                    | std-in-out-err ASSIGN expr app-out-star\n    \n    std-in-out-err  : E_STDIN\n                    | E_STDOUT\n                    | E_STDERR\n    \n    app-arg-expr-star   :\n                        | app-arg-expr app-arg-expr-star\n    \n    foreign-func-defn  :  annotation-star func-hdr foreign-func-body\n    \n    foreign-func-body  :  STR_LITERAL STR_LITERAL empty-or-literal empty-or-more-literals\n    \n    empty-or-literal    :\n                          |  STR_LITERAL\n    \n    empty-or-more-literals  :\n                            | LBRACKET single-or-multiple-literal  RBRACKET\n    \n    single-or-multiple-literal  : STR_LITERAL\n                                | MUL_STR_LITERAL\n    \n    var-decl  :  type-prefix var-decl-rest\n    \n    var-decl-rest-star  :\n                        | COMMA var-decl-rest var-decl-rest-star\n    \n    var-decl-rest  :  var-name type-suffix empty-or-var-mappign empty-or-assign-expr\n    \n    empty-or-var-mappign :\n                         | var-mapping\n    \n    empty-or-assign-expr    :\n                            | ASSIGN expr\n    \n    type-prefix  :  type-name\n                 | param-type\n    \n    param-type  :  type-name LESS standalone-type GREATER\n    \n    type-suffix  :\n                 | LBRACKET empty-or-standalone-type RBRACKET type-suffix\n    \n    empty-or-standalone-type    :\n                                | standalone-type\n    \n    standalone-type  :  type-prefix type-suffix\n    \n    var-mapping  :  LESS expr GREATER\n    \n    block  :  LBRACE translation-unit RBRACE\n    \n    stmt-chain  :  chainable-stmt semicolon-or-arrow statement\n    \n    semicolon-or-arrow  : SEMICOLON\n                        | ARROW\n    \n    chainable-stmt  :  var-name\n                      | func-call\n                      | var-decl\n                      | assignment\n    \n    assignment  :  lval-or-paren-lval assign-or-plusas expr-list\n    \n    lval-or-lval-list   : lval-list\n                        | LPAREN lval-list RPAREN\n    \n    assign-or-plusas    : ASSIGN\n                        | PLUS_AS\n    \n    lval-or-paren-lval  :   lval-list\n                        | LPAREN lval-list RPAREN\n    \n    update-stmt  :  var-name LESS ID GREATER UPD expr SEMICOLON\n    \n    if-stmt  :  S_IF LPAREN expr RPAREN block opt-else-block\n    \n    opt-else-block   :\n                     |  S_ELSE block\n    \n    switch-stmt  :  S_SWITCH LPAREN expr RPAREN LBRACE case-star opt-default RBRACE\n    \n    opt-default :\n                | S_DEFAULT\n    \n    case-star   :\n                |   case case-star\n    \n    case  :  S_CASE INT COLON translation-unit\n    \n    default  :  S_DEFAULT COLON translation-unit\n    \n    wait-stmt  :  E_WAIT opt-deep LPAREN expr-list RPAREN block\n    \n    opt-deep    :\n                |   E_DEEP\n    \n    foreach-loop  :  annotation-star S_FOREACH var-name opt-comma-var-name S_IN expr block\n    \n    opt-comma-var-name  :\n                        |   COMMA var-name\n    \n    for-loop  :  annotation-star S_FOR LPAREN for-init-list SEMICOLON expr SEMICOLON for-update-list RPAREN block\n    \n    while-loop  :   annotation S_WHILE LPAREN expr RPAREN block\n    \n    for-init-list  :  for-init for-init-star\n    \n    for-init-star   :\n                    | COMMA for-init for-init-star\n    \n    for-init  :  for-assignment\n              | type-prefix var-name type-suffix ASSIGN expr\n    \n    for-update-list  :  for-assignment for-assignment-star\n    \n    for-assignment-star :\n                        | COMMA for-assignment for-assignment-star\n    \n    for-assignment  :  var-name ASSIGN expr\n    \n    iterate-loop  :  S_ITERATE var-name block S_UNTIL LPAREN expr RPAREN\n    \n    expr  :  or-expr\n    \n    or-expr  :  and-expr\n             | or-expr LOG_OR and-expr\n    \n    and-expr  :  eq-expr\n              | and-expr LOG_AND eq-expr\n    \n    eq-expr  :  cmp-expr\n             | eq-expr eq-or-not-eq eq-expr\n    \n    eq-or-not-eq    : EQUAL\n                    | NOT_EQUAL\n    \n    cmp-expr  :  add-expr\n              | cmp-expr cmp-sign add-expr\n    \n    cmp-sign        : LESS\n                    | LESS_EQ\n                    | EQUAL\n                    | GREATER\n                    | GREATER_EQ\n    \n    add-expr  :  mult-expr\n              | add-expr add-sign mult-expr\n    \n    add-sign    : PLUS\n                | MINUS\n    \n    mult-expr  :  unary-expr\n               | mult-expr mult-sign unary-expr\n    \n    mult-sign   : MULT\n                | DIV\n                | MULTPER\n                | DOUBLEPER\n                | MOD\n    \n    unary-expr  :  postfix-expr\n                  | minus-or-excl postfix-expr\n    \n    minus-or-excl   : MINUS\n                    | EXCLAMATION\n    \n    postfix-expr  :  base-expr\n                  | postfix-expr array-or-struct\n    \n    array-or-struct : array-subscript\n                    | struct-subscript\n    \n    array-subscript  :  LBRACKET expr RBRACKET\n    \n    struct-subscript  :  DOT ID\n    \n    base-expr  :  literal\n                 | func-call\n                 | var-name\n                 | LPAREN expr RPAREN\n                 | tuple-constructor\n                 | array-constructor\n    \n    func-call  :  annotation-star func-name LPAREN func-call-arg-list RPAREN\n    \n    func-call-arg-list  :  expr-or-kw func-call-arg-star\n    \n    func-call-arg-star  :\n                        |   COMMA expr-or-kw func-call-arg-star\n    \n    expr-or-kw  :   expr\n                |   kw-expr\n    \n    tuple-constructor  :  LPAREN expr COMMA expr comma-expr-star RPAREN\n    \n    comma-expr-star :\n                    |   COMMA expr comma-expr-star\n    \n    array-constructor  :  array-list-constructor\n                       | array-range-constructor\n                       | array-kv-constructor\n    \n    array-list-constructor  :  LBRACKET opt-expr-list RBRACKET\n    \n    opt-expr-list    :\n                     |  expr-list\n    \n    array-range-constructor  :  LBRACKET expr COLON expr opt-coloned-expr RBRACKET\n    \n    opt-coloned-expr    :\n                        | COLON expr\n    \n    array-kv-constructor  :  LBRACE opt-array-constructor RBRACE\n    \n    opt-array-constructor   :\n                            | array-kv-elem comma-array-kv-elem-star\n    \n    comma-array-kv-elem-star    :\n                                |   COMMA array-kv-elem comma-array-kv-elem-star\n    \n    array-kv-elem  :  expr COLON expr\n    \n    annotation  :  AT ID\n                | AT kw-expr\n    \n    kw-expr  :  ID ASSIGN expr\n    \n    literal  :  STR_LITERAL\n             | MUL_STR_LITERAL\n             | INT\n             | float-literal\n             | bool-literal\n    \n    float-literal  :   DOUBLE\n                     | INF\n                     | NAN\n    \n    bool-literal  :  E_TRUE\n                  | E_FALSE\n    \n    expr-list  :  expr\n    \n    type-name  :  class_INT\n               | class_DOUBLE\n               | class_FLOAT\n               | class_VOID\n               | class_UINT\n               | class_BOOL\n               | class_CHARACTER\n               | class_String\n               | collection_SET\n               | collection_ARRAY\n               | collection_DICT\n               | ID\n    \n    const-name  :   D_LET ID\n    \n    var-name  :     ID\n    \n    func-name  :  D_FUNCTION ID\n    \n    lval-list  :  lval-expr lval-expr-star\n    \n    lval-expr-star  :\n                    |   COMMA lval-expr lval-expr-star\n    \n    lval-expr  :  var-name subscript-star\n    \n    subscript-star   :\n                     | array-subscript  subscript-star\n                     | struct-subscript subscript-star\n    \n    app-arg-expr  :   opt-at var-name\n                    | literal\n                    | array-constructor\n                    | LPAREN expr RPAREN\n    \n    opt-at  :\n            | AT\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,56,101,102,140,148,162,171,173,215,216,256,266,267,297,302,308,310,329,334,351,352,357,362,375,],[-2,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,-3,-19,-20,-85,-60,-86,-18,-24,-46,-62,-102,-63,-64,-101,-111,-61,-49,-103,-114,-100,-128,-104,-65,-117,]),'SEMICOLON':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,22,23,24,25,26,32,34,36,37,58,59,60,66,85,86,87,91,92,99,101,102,103,105,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,140,148,160,162,164,166,167,171,172,173,194,195,196,197,210,211,212,215,216,230,233,234,241,242,243,244,245,246,247,248,250,252,256,262,266,267,269,271,272,275,289,292,297,302,304,305,307,308,310,311,312,313,319,321,322,323,329,334,336,341,342,347,351,352,354,356,357,358,361,362,373,375,377,],[4,4,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-91,-223,-25,-26,-27,4,-89,86,-90,-92,101,102,-22,-223,4,-87,-88,-68,-79,171,-19,-20,-21,173,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-85,-60,-165,-86,-72,-93,-209,-18,-22,-24,-161,-162,-163,-157,261,-120,-122,-46,-62,-164,-74,-73,-23,-131,-133,-135,-139,-146,-150,-169,-184,-190,-102,-119,-63,-64,-58,-233,-234,-172,-71,-79,-101,-111,335,-120,-127,-61,-49,-58,-53,-232,351,-75,-84,-80,-103,-114,-121,-59,364,-235,-100,-128,-178,-187,-104,4,-123,-65,-53,-117,-54,]),'C_GLOBAL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,85,86,87,101,102,140,148,162,171,173,215,216,256,266,267,297,302,308,310,329,334,351,352,357,358,362,375,],[18,18,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,18,18,-87,-88,-19,-20,-85,-60,-86,-18,-24,-46,-62,-102,-63,-64,-101,-111,-61,-49,-103,-114,-100,-128,-104,18,-65,-117,]),'D_IMPORT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,85,86,87,101,102,140,148,162,171,173,215,216,256,266,267,297,302,308,310,329,334,351,352,357,358,362,375,],[20,20,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,20,20,-87,-88,-19,-20,-85,-60,-86,-18,-24,-46,-62,-102,-63,-64,-101,-111,-61,-49,-103,-114,-100,-128,-104,20,-65,-117,]),'C_PRAGMA':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,85,86,87,101,102,140,148,162,171,173,215,216,256,266,267,297,302,308,310,329,334,351,352,357,358,362,375,],[21,21,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,21,21,-87,-88,-19,-20,-85,-60,-86,-18,-24,-46,-62,-102,-63,-64,-101,-111,-61,-49,-103,-114,-100,-128,-104,21,-65,-117,]),'LBRACE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,61,63,66,67,82,84,85,86,87,93,94,95,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,144,147,148,150,151,154,160,162,163,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,205,206,215,216,217,223,230,235,242,243,244,245,246,247,248,249,250,251,252,254,255,256,258,259,261,265,266,267,269,271,272,273,275,277,278,279,280,287,288,290,297,298,302,303,308,310,311,313,324,326,329,334,337,347,351,352,354,356,357,358,362,365,370,374,375,],[26,26,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,26,139,139,-223,139,139,26,26,-87,-88,139,-96,-97,-19,-20,-129,-130,-132,-134,-138,-145,-149,-156,139,-160,-158,-159,-166,-167,-168,139,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,139,139,-85,139,26,-60,217,139,-224,-165,-86,139,-18,-24,139,139,139,-136,-137,139,-140,-141,-142,-143,-144,139,-147,-148,139,-151,-152,-153,-154,-155,-161,-162,-163,-157,26,257,-46,-62,139,-29,-164,139,-131,-133,-135,-139,-146,-150,-169,139,-184,139,-190,139,139,-102,26,139,139,139,-63,-64,139,-233,-234,139,-172,139,-30,-28,-36,139,139,139,-101,26,-111,26,-61,-49,139,-232,139,139,-103,-114,139,-235,-100,-128,-178,-187,-104,26,-65,139,26,139,-117,]),'S_IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,85,86,87,101,102,140,148,162,171,173,215,216,256,266,267,297,302,308,310,329,334,351,352,357,358,362,375,],[27,27,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,27,27,-87,-88,-19,-20,-85,-60,-86,-18,-24,-46,-62,-102,-63,-64,-101,-111,-61,-49,-103,-114,-100,-128,-104,27,-65,-117,]),'S_SWITCH':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,85,86,87,101,102,140,148,162,171,173,215,216,256,266,267,297,302,308,310,329,334,351,352,357,358,362,375,],[29,29,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,29,29,-87,-88,-19,-20,-85,-60,-86,-18,-24,-46,-62,-102,-63,-64,-101,-111,-61,-49,-103,-114,-100,-128,-104,29,-65,-117,]),'E_WAIT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,85,86,87,101,102,140,148,162,171,173,215,216,256,266,267,297,302,308,310,329,334,351,352,357,358,362,375,],[30,30,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,30,30,-87,-88,-19,-20,-85,-60,-86,-18,-24,-46,-62,-102,-63,-64,-101,-111,-61,-49,-103,-114,-100,-128,-104,30,-65,-117,]),'S_ITERATE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,85,86,87,101,102,140,148,162,171,173,215,216,256,266,267,297,302,308,310,329,334,351,352,357,358,362,375,],[33,33,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,33,33,-87,-88,-19,-20,-85,-60,-86,-18,-24,-46,-62,-102,-63,-64,-101,-111,-61,-49,-103,-114,-100,-128,-104,33,-65,-117,]),'S_FOREACH':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,31,35,66,85,86,87,88,89,90,101,102,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,140,148,160,162,171,173,194,195,196,197,215,216,230,232,242,243,244,245,246,247,248,250,252,256,266,267,275,297,302,308,310,329,334,351,352,354,356,357,358,362,375,],[-47,-47,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,-47,70,-47,-223,-47,-87,-88,-48,-196,-197,-19,-20,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-85,-60,-165,-86,-18,-24,-161,-162,-163,-157,-46,-62,-164,-198,-131,-133,-135,-139,-146,-150,-169,-184,-190,-102,-63,-64,-172,-101,-111,-61,-49,-103,-114,-100,-128,-178,-187,-104,-47,-65,-117,]),'S_FOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,31,35,66,85,86,87,88,89,90,101,102,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,140,148,160,162,171,173,194,195,196,197,215,216,230,232,242,243,244,245,246,247,248,250,252,256,266,267,275,297,302,308,310,329,334,351,352,354,356,357,358,362,375,],[-47,-47,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,-47,71,-47,-223,-47,-87,-88,-48,-196,-197,-19,-20,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-85,-60,-165,-86,-18,-24,-161,-162,-163,-157,-46,-62,-164,-198,-131,-133,-135,-139,-146,-150,-169,-184,-190,-102,-63,-64,-172,-101,-111,-61,-49,-103,-114,-100,-128,-178,-187,-104,-47,-65,-117,]),'C_APP':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,31,35,66,85,86,87,88,89,90,101,102,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,140,148,160,162,171,173,194,195,196,197,215,216,230,232,242,243,244,245,246,247,248,250,252,256,266,267,275,297,302,308,310,329,334,351,352,354,356,357,358,362,375,],[-47,-47,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,-47,73,-47,-223,-47,-87,-88,-48,-196,-197,-19,-20,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-85,-60,-165,-86,-18,-24,-161,-162,-163,-157,-46,-62,-164,-198,-131,-133,-135,-139,-146,-150,-169,-184,-190,-102,-63,-64,-172,-101,-111,-61,-49,-103,-114,-100,-128,-178,-187,-104,-47,-65,-117,]),'D_FUNCTION':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,31,35,61,63,66,67,73,75,82,85,86,87,88,89,90,93,94,95,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,148,151,152,160,162,163,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,215,216,230,232,235,242,243,244,245,246,247,248,249,250,251,252,254,255,256,259,261,265,266,267,273,275,277,280,285,287,288,290,297,302,308,310,324,326,329,334,337,351,352,354,356,357,358,362,365,374,375,],[-47,-47,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,-47,76,-47,-47,-47,-223,-47,-31,-35,-47,-47,-87,-88,-48,-196,-197,-47,-96,-97,-19,-20,-129,-130,-132,-134,-138,-145,-149,-156,-47,-160,-158,-159,-166,-167,-168,-47,-170,-171,-199,-200,-201,-202,-203,76,-181,-182,-183,-204,-205,-206,-207,-208,-47,-47,-85,-47,-60,-47,76,-165,-86,-47,-18,-24,-47,-47,-47,-136,-137,-47,-140,-141,-142,-143,-144,-47,-147,-148,-47,-151,-152,-153,-154,-155,-161,-162,-163,-157,-46,-62,-164,-198,-47,-131,-133,-135,-139,-146,-150,-169,-47,-184,-47,-190,-47,-47,-102,-47,-47,-47,-63,-64,-47,-172,-47,-36,-32,-47,-47,-47,-101,-111,-61,-49,-47,-47,-103,-114,-47,-100,-128,-178,-187,-104,-47,-65,-47,-47,-117,]),'LESS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,24,25,26,31,32,35,41,44,45,46,47,48,49,50,51,52,53,54,66,73,85,86,87,88,89,90,92,100,101,102,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,140,148,160,162,164,171,173,194,195,196,197,215,216,222,230,232,242,243,244,245,246,247,248,250,252,256,266,267,275,292,297,302,308,310,323,329,334,351,352,354,356,357,358,362,375,],[-47,-47,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-221,-25,-26,-27,-47,77,78,-47,96,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-223,77,-47,-87,-88,-48,-196,-197,-79,-221,-19,-20,-129,-130,-132,180,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-85,-60,-165,-86,235,-18,-24,-161,-162,-163,-157,-46,-62,-223,-164,-198,-131,-133,-135,-139,-146,-150,-169,-184,-190,-102,-63,-64,-172,-79,-101,-111,-61,-49,-80,-103,-114,-100,-128,-178,-187,-104,-47,-65,-117,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,27,29,30,31,35,61,63,66,67,68,69,71,73,74,75,82,85,86,87,88,89,90,93,94,95,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,144,148,151,154,160,162,163,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,215,216,217,223,230,231,232,235,242,243,244,245,246,247,248,249,250,251,252,254,255,256,259,261,265,266,267,269,271,272,273,275,277,285,287,288,290,292,297,302,308,310,311,313,317,323,324,326,329,334,337,347,350,351,352,354,356,357,358,362,365,374,375,],[28,28,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,28,63,67,-112,-31,-47,121,121,-223,121,144,-113,146,-31,151,153,121,28,-87,-88,-48,-196,-197,121,-96,-97,-19,-20,-129,-130,-132,-134,-138,-145,-149,-156,121,-160,-158,-159,-166,-167,-168,121,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,121,121,-85,121,-60,121,-224,-165,-86,121,-18,-24,121,121,121,-136,-137,121,-140,-141,-142,-143,-144,121,-147,-148,121,-151,-152,-153,-154,-155,-161,-162,-163,-157,-46,-62,273,153,-164,288,-198,121,-131,-133,-135,-139,-146,-150,-169,121,-184,121,-190,121,121,-102,121,121,121,-63,-64,273,-233,-234,121,-172,121,-32,121,121,121,-79,-101,-111,-61,-49,273,-232,-79,-80,121,121,-103,-114,121,-235,153,-100,-128,-178,-187,-104,28,-65,121,121,-117,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,24,25,26,28,33,38,39,41,42,44,45,46,47,48,49,50,51,52,53,54,57,61,63,66,67,70,76,77,78,82,83,85,86,87,93,94,95,96,98,100,101,102,104,114,116,117,121,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,144,146,148,151,153,162,163,165,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,209,213,215,216,217,226,228,235,238,249,250,251,252,254,255,256,259,261,263,265,266,267,269,270,271,272,273,274,277,282,283,284,287,288,290,297,302,308,310,311,313,324,326,329,334,335,337,347,351,352,356,357,358,362,365,372,374,375,],[22,22,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,60,61,-221,-25,-26,-27,22,66,66,89,66,-76,-77,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,100,66,66,-223,66,66,154,66,156,66,160,22,-87,-88,66,-96,-97,100,66,-221,-19,-20,172,66,-158,-159,66,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,66,66,-85,66,22,-60,222,100,-86,66,100,-18,-24,66,66,66,-136,-137,66,-140,-141,-142,-143,-144,66,-147,-148,66,-151,-152,-153,-154,-155,66,66,-46,-62,-236,-42,66,66,-78,66,-184,66,-190,66,66,-102,66,66,22,66,-63,-64,-236,66,-233,-234,66,-237,222,100,66,-43,66,66,66,-101,-111,-61,-49,-236,-232,66,66,-103,-114,66,66,-235,-100,-128,-187,-104,22,-65,66,66,66,-117,]),'AT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,35,61,63,66,67,82,85,86,87,89,90,93,94,95,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,144,148,151,160,162,163,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,215,216,217,230,232,235,242,243,244,245,246,247,248,249,250,251,252,254,255,256,259,261,265,266,267,269,271,272,273,275,277,287,288,290,297,302,308,310,311,313,324,326,329,334,337,347,351,352,354,356,357,358,362,365,374,375,],[38,38,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,38,38,38,38,-223,38,38,38,-87,-88,-196,-197,38,-96,-97,-19,-20,-129,-130,-132,-134,-138,-145,-149,-156,38,-160,-158,-159,-166,-167,-168,38,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,38,38,-85,38,-60,38,-165,-86,38,-18,-24,38,38,38,-136,-137,38,-140,-141,-142,-143,-144,38,-147,-148,38,-151,-152,-153,-154,-155,-161,-162,-163,-157,-46,-62,274,-164,-198,38,-131,-133,-135,-139,-146,-150,-169,38,-184,38,-190,38,38,-102,38,38,38,-63,-64,274,-233,-234,38,-172,38,38,38,38,-101,-111,-61,-49,274,-232,38,38,-103,-114,38,-235,-100,-128,-178,-187,-104,38,-65,38,38,-117,]),'class_INT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[44,44,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,44,44,44,-87,-88,44,-19,-20,-85,44,-60,44,-86,44,-18,-24,-46,-62,-102,44,-63,-64,44,-101,-111,-61,-49,-103,-114,-100,-128,-104,44,-65,-117,]),'class_DOUBLE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[45,45,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,45,45,45,-87,-88,45,-19,-20,-85,45,-60,45,-86,45,-18,-24,-46,-62,-102,45,-63,-64,45,-101,-111,-61,-49,-103,-114,-100,-128,-104,45,-65,-117,]),'class_FLOAT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[46,46,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,46,46,46,-87,-88,46,-19,-20,-85,46,-60,46,-86,46,-18,-24,-46,-62,-102,46,-63,-64,46,-101,-111,-61,-49,-103,-114,-100,-128,-104,46,-65,-117,]),'class_VOID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[47,47,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,47,47,47,-87,-88,47,-19,-20,-85,47,-60,47,-86,47,-18,-24,-46,-62,-102,47,-63,-64,47,-101,-111,-61,-49,-103,-114,-100,-128,-104,47,-65,-117,]),'class_UINT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[48,48,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,48,48,48,-87,-88,48,-19,-20,-85,48,-60,48,-86,48,-18,-24,-46,-62,-102,48,-63,-64,48,-101,-111,-61,-49,-103,-114,-100,-128,-104,48,-65,-117,]),'class_BOOL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[49,49,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,49,49,49,-87,-88,49,-19,-20,-85,49,-60,49,-86,49,-18,-24,-46,-62,-102,49,-63,-64,49,-101,-111,-61,-49,-103,-114,-100,-128,-104,49,-65,-117,]),'class_CHARACTER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[50,50,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,50,50,50,-87,-88,50,-19,-20,-85,50,-60,50,-86,50,-18,-24,-46,-62,-102,50,-63,-64,50,-101,-111,-61,-49,-103,-114,-100,-128,-104,50,-65,-117,]),'class_String':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[51,51,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,51,51,51,-87,-88,51,-19,-20,-85,51,-60,51,-86,51,-18,-24,-46,-62,-102,51,-63,-64,51,-101,-111,-61,-49,-103,-114,-100,-128,-104,51,-65,-117,]),'collection_SET':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[52,52,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,52,52,52,-87,-88,52,-19,-20,-85,52,-60,52,-86,52,-18,-24,-46,-62,-102,52,-63,-64,52,-101,-111,-61,-49,-103,-114,-100,-128,-104,52,-65,-117,]),'collection_ARRAY':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[53,53,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,53,53,53,-87,-88,53,-19,-20,-85,53,-60,53,-86,53,-18,-24,-46,-62,-102,53,-63,-64,53,-101,-111,-61,-49,-103,-114,-100,-128,-104,53,-65,-117,]),'collection_DICT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,57,85,86,87,96,101,102,140,146,148,153,162,165,171,173,215,216,256,263,266,267,282,297,302,308,310,329,334,351,352,357,358,362,375,],[54,54,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,54,54,54,-87,-88,54,-19,-20,-85,54,-60,54,-86,54,-18,-24,-46,-62,-102,54,-63,-64,54,-101,-111,-61,-49,-103,-114,-100,-128,-104,54,-65,-117,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,26,56,62,66,101,102,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,139,140,148,160,162,171,173,194,195,196,197,202,203,215,216,230,242,243,244,245,246,247,248,250,252,253,256,257,266,267,268,269,271,272,275,295,296,297,299,300,302,308,310,311,312,313,328,329,330,331,332,334,341,342,347,351,352,354,356,357,358,362,363,364,369,373,375,377,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,-2,-3,140,-223,-19,-20,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-191,-85,-60,-165,-86,-18,-24,-161,-162,-163,-157,252,-193,-46,-62,-164,-131,-133,-135,-139,-146,-150,-169,-184,-190,-192,-102,-107,-63,-64,310,-58,-233,-234,-172,-193,-195,-101,-105,-107,-111,-61,-49,-58,-53,-232,-194,-103,357,-106,-108,-114,-59,-51,-235,-100,-128,-178,-187,-104,-2,-65,-50,-52,-109,-53,-117,-54,]),'S_CASE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,56,101,102,140,148,162,171,173,215,216,256,257,266,267,297,300,302,308,310,329,334,351,352,357,358,362,369,375,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,-3,-19,-20,-85,-60,-86,-18,-24,-46,-62,-102,301,-63,-64,-101,301,-111,-61,-49,-103,-114,-100,-128,-104,-2,-65,-109,-117,]),'S_DEFAULT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,24,25,56,101,102,140,148,162,171,173,215,216,256,257,266,267,297,299,300,302,308,310,329,332,334,351,352,357,358,362,369,375,],[-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-25,-26,-27,-3,-19,-20,-85,-60,-86,-18,-24,-46,-62,-102,-107,-63,-64,-101,331,-107,-111,-61,-49,-103,-108,-114,-100,-128,-104,-2,-65,-109,-117,]),'C_CONST':([18,],[57,]),'ARROW':([19,22,32,34,36,37,66,72,91,92,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,154,160,164,166,167,194,195,196,197,223,230,233,234,242,243,244,245,246,247,248,250,252,275,278,279,280,289,292,321,322,323,354,356,],[-91,-223,-89,87,-90,-92,-223,147,-68,-79,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-224,-165,-72,-93,-209,-161,-162,-163,-157,-29,-164,-74,-73,-131,-133,-135,-139,-146,-150,-169,-184,-190,-172,-30,-28,-36,-71,-79,-75,-84,-80,-178,-187,]),'STR_LITERAL':([20,61,63,66,67,72,82,93,94,95,114,116,117,121,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,144,149,151,154,163,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,216,217,223,235,249,250,251,252,254,255,259,261,265,269,271,272,273,277,278,279,280,287,288,290,309,311,313,324,326,337,347,356,365,374,],[59,124,124,-223,124,149,124,124,-96,-97,124,-158,-159,124,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,124,124,124,216,124,-224,124,124,124,124,-136,-137,124,-140,-141,-142,-143,-144,124,-147,-148,124,-151,-152,-153,-154,-155,266,124,-29,124,124,-184,124,-190,124,124,124,124,124,124,-233,-234,124,124,-30,-28,-36,124,124,124,339,124,-232,124,124,124,-235,-187,124,124,]),'LBRACKET':([22,32,41,42,44,45,46,47,48,49,50,51,52,53,54,61,63,65,66,67,80,81,82,92,93,94,95,100,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,144,151,160,163,169,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,216,217,222,230,235,238,248,249,250,251,252,254,255,259,261,264,265,266,267,269,271,272,273,275,277,287,288,290,292,311,313,317,324,326,337,347,354,356,365,374,],[-223,82,-76,-77,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,138,138,82,-223,138,82,82,138,165,138,-96,-97,-221,82,138,-160,-158,-159,-166,-167,-168,138,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,138,138,138,138,-165,138,165,138,138,138,-136,-137,138,-140,-141,-142,-143,-144,138,-147,-148,138,-151,-152,-153,-154,-155,-161,-162,-163,82,-62,138,-223,-164,138,-78,-169,138,-184,138,-190,138,138,138,138,165,138,-63,309,138,-233,-234,138,-172,138,138,138,138,165,138,-232,165,138,138,138,-235,-178,-187,138,138,]),'DOT':([22,32,60,65,66,80,81,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,172,194,195,196,197,222,230,248,250,252,275,354,356,],[-223,83,104,83,-223,83,83,83,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,104,-161,-162,-163,83,-223,-164,-169,-184,-190,-172,-178,-187,]),'COMMA':([22,32,55,65,66,79,80,81,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,145,155,157,158,160,170,194,195,196,197,198,203,211,212,219,220,221,222,225,230,232,242,243,244,245,246,247,248,250,252,275,286,292,293,295,296,305,307,315,316,317,323,350,353,354,356,360,361,366,376,378,],[-223,-229,98,-229,-223,-228,-229,-229,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,209,228,-230,-231,-165,98,-161,-162,-163,-157,249,254,263,-122,277,-176,-177,-223,282,-164,-198,-131,-133,-135,-139,-146,-150,-169,-184,-190,-172,228,-79,324,254,-195,263,-127,277,282,-79,-80,-44,324,-178,-187,372,-123,-41,372,-45,]),'ASSIGN':([22,32,40,43,55,65,66,79,80,81,89,92,97,142,157,158,160,164,170,214,222,230,233,234,240,264,280,292,306,317,322,323,343,344,345,346,350,367,],[-223,-229,94,-98,-226,-229,-223,-228,-229,-229,163,-79,-225,-99,-230,-231,-165,-72,-226,265,163,-164,290,-73,-227,-79,-36,-79,337,-79,-84,-80,365,-55,-56,-57,-35,374,]),'PLUS_AS':([22,32,40,43,55,65,66,79,80,81,97,142,157,158,160,170,230,240,],[-223,-229,95,-98,-226,-229,-223,-228,-229,-229,-225,-99,-230,-231,-165,-226,-164,-227,]),'E_DEEP':([30,],[69,]),'GREATER':([41,42,44,45,46,47,48,49,50,51,52,53,54,66,100,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,155,156,160,168,169,194,195,196,197,222,227,230,238,239,242,243,244,245,246,247,248,250,252,275,286,291,292,318,323,354,356,],[-76,-77,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-223,-221,-129,-130,-132,183,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-33,229,-165,238,-79,-161,-162,-163,-157,-223,285,-164,-78,-83,-131,-133,-135,-139,-146,-150,-169,-184,-190,-172,-33,322,-79,-34,-80,-178,-187,]),'RANGE':([41,42,44,45,46,47,48,49,50,51,52,53,54,100,226,238,],[-76,-77,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-221,284,-78,]),'RBRACKET':([41,42,44,45,46,47,48,49,50,51,52,53,54,66,100,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,159,160,165,169,194,195,196,197,199,200,201,230,236,237,238,239,242,243,244,245,246,247,248,250,252,275,292,294,323,327,338,339,340,354,355,356,],[-76,-77,-210,-211,-212,-213,-214,-215,-216,-217,-218,-219,-220,-223,-221,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-185,230,-165,-81,-79,-161,-162,-163,-157,250,-209,-186,-164,292,-82,-78,-83,-131,-133,-135,-139,-146,-150,-169,-184,-190,-172,-79,-188,-80,356,362,-66,-67,-178,-189,-187,]),'RPAREN':([55,64,65,66,79,80,81,97,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,141,143,153,157,158,160,167,170,194,195,196,197,198,207,218,219,220,221,222,224,225,230,232,240,242,243,244,245,246,247,248,250,252,275,276,281,292,293,307,314,315,316,317,320,323,325,348,349,350,353,354,356,359,360,366,368,371,376,378,379,],[-226,142,-229,-223,-228,-229,-229,-225,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,205,206,-37,-230,-231,-165,-209,-226,-161,-162,-163,-157,248,258,275,-174,-176,-177,-223,280,-39,-164,-198,-227,-131,-133,-135,-139,-146,-150,-169,-184,-190,-172,-173,-38,-79,-179,-127,347,-174,-39,-79,352,-80,354,-175,-40,-44,-179,-178,-187,370,-125,-41,-180,-124,-125,-45,-126,]),'MINUS':([61,63,66,67,82,93,94,95,110,111,112,113,115,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,144,151,160,163,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,222,230,235,245,246,247,248,249,250,251,252,254,255,259,261,265,273,275,277,287,288,290,324,326,337,354,356,365,374,],[116,116,-223,116,116,116,-96,-97,187,-145,-149,-156,-160,-166,-167,-168,116,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,116,116,116,116,-165,116,116,116,116,-136,-137,116,-140,-141,-142,-143,-144,116,-147,-148,116,-151,-152,-153,-154,-155,-161,-162,-163,-157,-223,-164,116,187,-146,-150,-169,116,-184,116,-190,116,116,116,116,116,116,-172,116,116,116,116,116,116,116,-178,-187,116,116,]),'EXCLAMATION':([61,63,67,82,93,94,95,121,138,139,144,151,163,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[117,117,117,117,117,-96,-97,117,117,117,117,117,117,117,117,117,-136,-137,117,-140,-141,-142,-143,-144,117,-147,-148,117,-151,-152,-153,-154,-155,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'MUL_STR_LITERAL':([61,63,66,67,82,93,94,95,114,116,117,121,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,144,151,163,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,217,235,249,250,251,252,254,255,259,261,265,269,271,272,273,277,287,288,290,309,311,313,324,326,337,347,356,365,374,],[125,125,-223,125,125,125,-96,-97,125,-158,-159,125,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,125,125,125,125,125,125,125,125,-136,-137,125,-140,-141,-142,-143,-144,125,-147,-148,125,-151,-152,-153,-154,-155,125,125,125,-184,125,-190,125,125,125,125,125,125,-233,-234,125,125,125,125,125,340,125,-232,125,125,125,-235,-187,125,125,]),'INT':([61,63,66,67,82,93,94,95,114,116,117,121,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,144,151,163,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,217,235,249,250,251,252,254,255,259,261,265,269,271,272,273,277,287,288,290,301,311,313,324,326,337,347,356,365,374,],[126,126,-223,126,126,126,-96,-97,126,-158,-159,126,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,126,126,126,126,126,126,126,126,-136,-137,126,-140,-141,-142,-143,-144,126,-147,-148,126,-151,-152,-153,-154,-155,126,126,126,-184,126,-190,126,126,126,126,126,126,-233,-234,126,126,126,126,126,333,126,-232,126,126,126,-235,-187,126,126,]),'DOUBLE':([61,63,66,67,82,93,94,95,114,116,117,121,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,144,151,163,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,217,235,249,250,251,252,254,255,259,261,265,269,271,272,273,277,287,288,290,311,313,324,326,337,347,356,365,374,],[133,133,-223,133,133,133,-96,-97,133,-158,-159,133,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,133,133,133,133,133,133,133,133,-136,-137,133,-140,-141,-142,-143,-144,133,-147,-148,133,-151,-152,-153,-154,-155,133,133,133,-184,133,-190,133,133,133,133,133,133,-233,-234,133,133,133,133,133,133,-232,133,133,133,-235,-187,133,133,]),'INF':([61,63,66,67,82,93,94,95,114,116,117,121,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,144,151,163,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,217,235,249,250,251,252,254,255,259,261,265,269,271,272,273,277,287,288,290,311,313,324,326,337,347,356,365,374,],[134,134,-223,134,134,134,-96,-97,134,-158,-159,134,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,134,134,134,134,134,134,134,134,-136,-137,134,-140,-141,-142,-143,-144,134,-147,-148,134,-151,-152,-153,-154,-155,134,134,134,-184,134,-190,134,134,134,134,134,134,-233,-234,134,134,134,134,134,134,-232,134,134,134,-235,-187,134,134,]),'NAN':([61,63,66,67,82,93,94,95,114,116,117,121,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,144,151,163,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,217,235,249,250,251,252,254,255,259,261,265,269,271,272,273,277,287,288,290,311,313,324,326,337,347,356,365,374,],[135,135,-223,135,135,135,-96,-97,135,-158,-159,135,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,135,135,135,135,135,135,135,135,-136,-137,135,-140,-141,-142,-143,-144,135,-147,-148,135,-151,-152,-153,-154,-155,135,135,135,-184,135,-190,135,135,135,135,135,135,-233,-234,135,135,135,135,135,135,-232,135,135,135,-235,-187,135,135,]),'E_TRUE':([61,63,66,67,82,93,94,95,114,116,117,121,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,144,151,163,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,217,235,249,250,251,252,254,255,259,261,265,269,271,272,273,277,287,288,290,311,313,324,326,337,347,356,365,374,],[136,136,-223,136,136,136,-96,-97,136,-158,-159,136,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,136,136,136,136,136,136,136,136,-136,-137,136,-140,-141,-142,-143,-144,136,-147,-148,136,-151,-152,-153,-154,-155,136,136,136,-184,136,-190,136,136,136,136,136,136,-233,-234,136,136,136,136,136,136,-232,136,136,136,-235,-187,136,136,]),'E_FALSE':([61,63,66,67,82,93,94,95,114,116,117,121,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,144,151,163,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,217,235,249,250,251,252,254,255,259,261,265,269,271,272,273,277,287,288,290,311,313,324,326,337,347,356,365,374,],[137,137,-223,137,137,137,-96,-97,137,-158,-159,137,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,137,137,137,137,137,137,137,137,-136,-137,137,-140,-141,-142,-143,-144,137,-147,-148,137,-151,-152,-153,-154,-155,137,137,137,-184,137,-190,137,137,137,137,137,137,-233,-234,137,137,137,137,137,137,-232,137,137,137,-235,-187,137,137,]),'MULT':([66,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,246,247,248,250,252,275,354,356,],[-223,189,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,189,-150,-169,-184,-190,-172,-178,-187,]),'DIV':([66,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,246,247,248,250,252,275,354,356,],[-223,190,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,190,-150,-169,-184,-190,-172,-178,-187,]),'MULTPER':([66,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,246,247,248,250,252,275,354,356,],[-223,191,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,191,-150,-169,-184,-190,-172,-178,-187,]),'DOUBLEPER':([66,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,246,247,248,250,252,275,354,356,],[-223,192,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,192,-150,-169,-184,-190,-172,-178,-187,]),'MOD':([66,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,246,247,248,250,252,275,354,356,],[-223,193,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,193,-150,-169,-184,-190,-172,-178,-187,]),'PLUS':([66,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,245,246,247,248,250,252,275,354,356,],[-223,186,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,186,-146,-150,-169,-184,-190,-172,-178,-187,]),'LESS_EQ':([66,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,245,246,247,248,250,252,275,354,356,],[-223,181,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,-139,-146,-150,-169,-184,-190,-172,-178,-187,]),'EQUAL':([66,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,243,244,245,246,247,248,250,252,275,354,356,],[-223,177,182,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,177,177,-139,-146,-150,-169,-184,-190,-172,-178,-187,]),'GREATER_EQ':([66,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,245,246,247,248,250,252,275,354,356,],[-223,184,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,-139,-146,-150,-169,-184,-190,-172,-178,-187,]),'NOT_EQUAL':([66,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,243,244,245,246,247,248,250,252,275,354,356,],[-223,178,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,178,178,-139,-146,-150,-169,-184,-190,-172,-178,-187,]),'LOG_AND':([66,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,242,243,244,245,246,247,248,250,252,275,354,356,],[-223,175,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,175,-133,-135,-139,-146,-150,-169,-184,-190,-172,-178,-187,]),'LOG_OR':([66,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,222,230,242,243,244,245,246,247,248,250,252,275,354,356,],[-223,174,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-223,-164,-131,-133,-135,-139,-146,-150,-169,-184,-190,-172,-178,-187,]),'S_IN':([66,145,208,260,],[-223,-115,259,-116,]),'COLON':([66,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,200,204,230,242,243,244,245,246,247,248,250,252,275,294,333,354,356,],[-223,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,251,255,-164,-131,-133,-135,-139,-146,-150,-169,-184,-190,-172,326,358,-178,-187,]),'E_STDIN':([66,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,230,242,243,244,245,246,247,248,250,252,269,271,272,275,311,312,313,341,347,354,356,373,],[-223,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-164,-131,-133,-135,-139,-146,-150,-169,-184,-190,-58,-233,-234,-172,-58,344,-232,-59,-235,-178,-187,344,]),'E_STDOUT':([66,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,230,242,243,244,245,246,247,248,250,252,269,271,272,275,311,312,313,341,347,354,356,373,],[-223,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-164,-131,-133,-135,-139,-146,-150,-169,-184,-190,-58,-233,-234,-172,-58,345,-232,-59,-235,-178,-187,345,]),'E_STDERR':([66,106,107,108,109,110,111,112,113,115,118,119,120,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,160,194,195,196,197,230,242,243,244,245,246,247,248,250,252,269,271,272,275,311,312,313,341,347,354,356,373,],[-223,-129,-130,-132,-134,-138,-145,-149,-156,-160,-166,-167,-168,-170,-171,-199,-200,-201,-202,-203,-181,-182,-183,-204,-205,-206,-207,-208,-165,-161,-162,-163,-157,-164,-131,-133,-135,-139,-146,-150,-169,-184,-190,-58,-233,-234,-172,-58,346,-232,-59,-235,-178,-187,346,]),'S_UNTIL':([140,161,],[-85,231,]),'S_ELSE':([140,256,],[-85,298,]),'UPD':([229,],[287,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation-unit':([0,26,358,],[1,62,369,]),'statement-star':([0,3,26,358,],[2,56,2,2,]),'statement':([0,3,26,85,358,],[3,3,3,162,3,]),'global-const-defn':([0,3,26,85,358,],[5,5,5,5,5,]),'import-stmt':([0,3,26,85,358,],[6,6,6,6,6,]),'pragma-stmt':([0,3,26,85,358,],[7,7,7,7,7,]),'func-defn':([0,3,26,85,358,],[8,8,8,8,8,]),'block':([0,3,26,84,85,147,205,258,298,303,358,370,],[9,9,9,161,9,215,256,302,329,334,9,375,]),'if-stmt':([0,3,26,85,358,],[10,10,10,10,10,]),'switch-stmt':([0,3,26,85,358,],[11,11,11,11,11,]),'wait-stmt':([0,3,26,85,358,],[12,12,12,12,12,]),'foreach-loop':([0,3,26,85,358,],[13,13,13,13,13,]),'for-loop':([0,3,26,85,358,],[14,14,14,14,14,]),'iterate-loop':([0,3,26,85,358,],[15,15,15,15,15,]),'stmt-chain':([0,3,26,85,358,],[16,16,16,16,16,]),'update-stmt':([0,3,26,85,358,],[17,17,17,17,17,]),'var-decl':([0,3,26,57,85,358,],[19,19,19,99,19,19,]),'swift-func-defn':([0,3,26,85,358,],[23,23,23,23,23,]),'app-func-defn':([0,3,26,85,358,],[24,24,24,24,24,]),'foreign-func-defn':([0,3,26,85,358,],[25,25,25,25,25,]),'annotation-star':([0,3,26,35,61,63,67,82,85,93,114,121,138,139,144,151,163,174,175,176,179,185,188,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,358,365,374,],[31,31,31,88,129,129,129,129,31,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,31,129,129,]),'var-name':([0,3,26,28,33,39,61,63,67,70,77,82,85,93,98,114,121,138,139,144,146,151,163,174,175,176,179,185,188,209,213,228,235,249,251,254,255,259,261,263,265,270,273,277,283,287,288,290,324,326,335,337,358,365,372,374,],[32,32,32,65,84,92,120,120,120,145,155,120,32,120,65,120,120,120,120,120,214,120,120,120,120,120,120,120,120,260,264,286,120,120,120,120,120,120,120,214,120,313,120,120,317,120,120,120,120,120,214,120,32,120,214,120,]),'chainable-stmt':([0,3,26,85,358,],[34,34,34,34,34,]),'annotation':([0,3,26,35,61,63,67,82,85,93,114,121,138,139,144,151,163,174,175,176,179,185,188,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,358,365,374,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'func-call':([0,3,26,61,63,67,82,85,93,114,121,138,139,144,151,163,174,175,176,179,185,188,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,358,365,374,],[36,36,36,119,119,119,119,36,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,36,119,119,]),'assignment':([0,3,26,85,358,],[37,37,37,37,37,]),'type-prefix':([0,3,26,57,85,96,146,153,165,263,282,358,],[39,39,39,39,39,169,213,226,169,213,226,39,]),'lval-or-paren-lval':([0,3,26,85,358,],[40,40,40,40,40,]),'type-name':([0,3,26,57,85,96,146,153,165,263,282,358,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'param-type':([0,3,26,57,85,96,146,153,165,263,282,358,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'lval-list':([0,3,26,28,85,358,],[43,43,43,64,43,43,]),'lval-expr':([0,3,26,28,85,98,358,],[55,55,55,55,55,170,55,]),'module-path':([20,],[58,]),'opt-deep':([30,],[68,]),'func-hdr':([31,73,],[72,150,]),'func-name':([31,129,152,],[74,74,223,]),'type-params':([31,73,],[75,75,]),'subscript-star':([32,65,80,81,],[79,79,157,158,]),'array-subscript':([32,65,80,81,113,197,],[80,80,80,80,195,195,]),'struct-subscript':([32,65,80,81,113,197,],[81,81,81,81,196,196,]),'semicolon-or-arrow':([34,],[85,]),'kw-expr':([38,151,277,],[90,221,221,]),'var-decl-rest':([39,],[91,]),'assign-or-plusas':([40,],[93,]),'lval-expr-star':([55,170,],[97,240,]),'path-star':([60,172,],[103,241,]),'expr':([61,63,67,82,93,121,138,139,144,151,163,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[105,141,143,159,167,198,200,204,167,220,232,291,293,294,204,296,303,304,307,314,220,319,320,321,353,355,361,373,378,]),'or-expr':([61,63,67,82,93,121,138,139,144,151,163,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'and-expr':([61,63,67,82,93,121,138,139,144,151,163,174,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[107,107,107,107,107,107,107,107,107,107,107,242,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'eq-expr':([61,63,67,82,93,121,138,139,144,151,163,174,175,176,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[108,108,108,108,108,108,108,108,108,108,108,108,243,244,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'cmp-expr':([61,63,67,82,93,121,138,139,144,151,163,174,175,176,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'add-expr':([61,63,67,82,93,121,138,139,144,151,163,174,175,176,179,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,245,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'mult-expr':([61,63,67,82,93,121,138,139,144,151,163,174,175,176,179,185,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,246,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'unary-expr':([61,63,67,82,93,121,138,139,144,151,163,174,175,176,179,185,188,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,247,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'postfix-expr':([61,63,67,82,93,114,121,138,139,144,151,163,174,175,176,179,185,188,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[113,113,113,113,113,197,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'minus-or-excl':([61,63,67,82,93,121,138,139,144,151,163,174,175,176,179,185,188,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'base-expr':([61,63,67,82,93,114,121,138,139,144,151,163,174,175,176,179,185,188,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'literal':([61,63,67,82,93,114,121,138,139,144,151,163,174,175,176,179,185,188,217,235,249,251,254,255,259,261,265,269,273,277,287,288,290,311,324,326,337,365,374,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,271,118,118,118,118,118,118,118,118,271,118,118,118,118,118,271,118,118,118,118,118,]),'tuple-constructor':([61,63,67,82,93,114,121,138,139,144,151,163,174,175,176,179,185,188,235,249,251,254,255,259,261,265,273,277,287,288,290,324,326,337,365,374,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'array-constructor':([61,63,67,82,93,114,121,138,139,144,151,163,174,175,176,179,185,188,217,235,249,251,254,255,259,261,265,269,273,277,287,288,290,311,324,326,337,365,374,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,272,123,123,123,123,123,123,123,123,272,123,123,123,123,123,272,123,123,123,123,123,]),'float-literal':([61,63,67,82,93,114,121,138,139,144,151,163,174,175,176,179,185,188,217,235,249,251,254,255,259,261,265,269,273,277,287,288,290,311,324,326,337,365,374,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'bool-literal':([61,63,67,82,93,114,121,138,139,144,151,163,174,175,176,179,185,188,217,235,249,251,254,255,259,261,265,269,273,277,287,288,290,311,324,326,337,365,374,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'array-list-constructor':([61,63,67,82,93,114,121,138,139,144,151,163,174,175,176,179,185,188,217,235,249,251,254,255,259,261,265,269,273,277,287,288,290,311,324,326,337,365,374,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'array-range-constructor':([61,63,67,82,93,114,121,138,139,144,151,163,174,175,176,179,185,188,217,235,249,251,254,255,259,261,265,269,273,277,287,288,290,311,324,326,337,365,374,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'array-kv-constructor':([61,63,67,82,93,114,121,138,139,144,151,163,174,175,176,179,185,188,217,235,249,251,254,255,259,261,265,269,273,277,287,288,290,311,324,326,337,365,374,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'foreign-func-body':([72,],[148,]),'formal-arg-list':([75,223,350,],[152,278,367,]),'type-suffix':([92,169,264,292,317,],[164,239,306,323,350,]),'expr-list':([93,138,144,],[166,201,207,]),'standalone-type':([96,165,],[168,237,]),'eq-or-not-eq':([108,243,244,],[176,176,176,]),'cmp-sign':([109,],[179,]),'add-sign':([110,245,],[185,185,]),'mult-sign':([111,246,],[188,188,]),'array-or-struct':([113,197,],[194,194,]),'opt-expr-list':([138,],[199,]),'opt-array-constructor':([139,],[202,]),'array-kv-elem':([139,254,],[203,295,]),'opt-comma-var-name':([145,],[208,]),'for-init-list':([146,],[210,]),'for-init':([146,263,],[211,305,]),'for-assignment':([146,263,335,372,],[212,212,360,376,]),'func-call-arg-list':([151,],[218,]),'expr-or-kw':([151,277,],[219,315,]),'opt-formal-args':([153,],[224,]),'formal-arg':([153,282,],[225,316,]),'comma-name-star':([155,286,],[227,318,]),'empty-or-var-mappign':([164,],[233,]),'var-mapping':([164,],[234,]),'empty-or-standalone-type':([165,],[236,]),'comma-array-kv-elem-star':([203,295,],[253,328,]),'for-init-star':([211,305,],[262,336,]),'empty-or-literal':([216,],[267,]),'app-body':([217,],[268,]),'app-arg-expr':([217,269,311,],[269,311,311,]),'opt-at':([217,269,311,],[270,270,270,]),'func-call-arg-star':([219,315,],[276,348,]),'empty-or-arg-list':([223,],[279,]),'comma-args-star':([225,316,],[281,349,]),'empty-or-range':([226,],[283,]),'empty-or-assign-expr':([233,],[289,]),'opt-else-block':([256,],[297,]),'case-star':([257,300,],[299,332,]),'case':([257,300,],[300,300,]),'empty-or-more-literals':([267,],[308,]),'app-arg-expr-star':([269,311,],[312,341,]),'comma-expr-star':([293,353,],[325,368,]),'opt-coloned-expr':([294,],[327,]),'opt-default':([299,],[330,]),'single-or-multiple-literal':([309,],[338,]),'app-out-star':([312,373,],[342,377,]),'std-in-out-err':([312,373,],[343,343,]),'for-update-list':([335,],[359,]),'empty-or-semicolon':([342,],[363,]),'empty-or-ass-expr':([350,],[366,]),'for-assignment-star':([360,376,],[371,379,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation-unit","S'",1,None,None,None),
  ('translation-unit -> statement-star','translation-unit',1,'p_translation_unit','yacc.py',10),
  ('statement-star -> <empty>','statement-star',0,'p_statement_star','yacc.py',16),
  ('statement-star -> statement statement-star','statement-star',2,'p_statement_star','yacc.py',17),
  ('statement -> SEMICOLON','statement',1,'p_statement','yacc.py',26),
  ('statement -> global-const-defn','statement',1,'p_statement','yacc.py',27),
  ('statement -> import-stmt','statement',1,'p_statement','yacc.py',28),
  ('statement -> pragma-stmt','statement',1,'p_statement','yacc.py',29),
  ('statement -> func-defn','statement',1,'p_statement','yacc.py',30),
  ('statement -> block','statement',1,'p_statement','yacc.py',31),
  ('statement -> if-stmt','statement',1,'p_statement','yacc.py',32),
  ('statement -> switch-stmt','statement',1,'p_statement','yacc.py',33),
  ('statement -> wait-stmt','statement',1,'p_statement','yacc.py',34),
  ('statement -> foreach-loop','statement',1,'p_statement','yacc.py',35),
  ('statement -> for-loop','statement',1,'p_statement','yacc.py',36),
  ('statement -> iterate-loop','statement',1,'p_statement','yacc.py',37),
  ('statement -> stmt-chain','statement',1,'p_statement','yacc.py',38),
  ('statement -> update-stmt','statement',1,'p_statement','yacc.py',39),
  ('global-const-defn -> C_GLOBAL C_CONST var-decl SEMICOLON','global-const-defn',4,'p_global_const_defn','yacc.py',45),
  ('import-stmt -> D_IMPORT module-path SEMICOLON','import-stmt',3,'p_import_stmt','yacc.py',51),
  ('import-stmt -> D_IMPORT STR_LITERAL SEMICOLON','import-stmt',3,'p_import_stmt','yacc.py',52),
  ('module-path -> ID path-star','module-path',2,'p_module_path','yacc.py',58),
  ('path-star -> <empty>','path-star',0,'p_path_star','yacc.py',64),
  ('path-star -> DOT ID path-star','path-star',3,'p_path_star','yacc.py',65),
  ('pragma-stmt -> C_PRAGMA ID expr SEMICOLON','pragma-stmt',4,'p_pragma_stms','yacc.py',74),
  ('func-defn -> swift-func-defn','func-defn',1,'p_func_defn','yacc.py',80),
  ('func-defn -> app-func-defn','func-defn',1,'p_func_defn','yacc.py',81),
  ('func-defn -> foreign-func-defn','func-defn',1,'p_func_defn','yacc.py',82),
  ('func-hdr -> type-params formal-arg-list func-name empty-or-arg-list','func-hdr',4,'p_func_hdr','yacc.py',88),
  ('empty-or-arg-list -> <empty>','empty-or-arg-list',0,'p_empty_or_arg_list','yacc.py',97),
  ('empty-or-arg-list -> formal-arg-list','empty-or-arg-list',1,'p_empty_or_arg_list','yacc.py',98),
  ('type-params -> <empty>','type-params',0,'p_type_params','yacc.py',105),
  ('type-params -> LESS var-name comma-name-star GREATER','type-params',4,'p_type_params','yacc.py',106),
  ('comma-name-star -> <empty>','comma-name-star',0,'p_comma_name_star','yacc.py',115),
  ('comma-name-star -> COMMA var-name comma-name-star','comma-name-star',3,'p_comma_name_star','yacc.py',116),
  ('formal-arg-list -> <empty>','formal-arg-list',0,'p_formal_arg_list','yacc.py',125),
  ('formal-arg-list -> LPAREN opt-formal-args RPAREN','formal-arg-list',3,'p_formal_arg_list','yacc.py',126),
  ('opt-formal-args -> <empty>','opt-formal-args',0,'p_opt_formal_args','yacc.py',135),
  ('opt-formal-args -> formal-arg comma-args-star','opt-formal-args',2,'p_opt_formal_args','yacc.py',136),
  ('comma-args-star -> <empty>','comma-args-star',0,'p_comma_args_star','yacc.py',143),
  ('comma-args-star -> COMMA formal-arg comma-args-star','comma-args-star',3,'p_comma_args_star','yacc.py',144),
  ('formal-arg -> type-prefix empty-or-range var-name type-suffix empty-or-ass-expr','formal-arg',5,'p_formal_arg','yacc.py',153),
  ('empty-or-range -> <empty>','empty-or-range',0,'p_empty_or_range','yacc.py',160),
  ('empty-or-range -> RANGE','empty-or-range',1,'p_empty_or_range','yacc.py',161),
  ('empty-or-ass-expr -> <empty>','empty-or-ass-expr',0,'p_empty_or_ass_expr','yacc.py',167),
  ('empty-or-ass-expr -> formal-arg-list ASSIGN expr','empty-or-ass-expr',3,'p_empty_or_ass_expr','yacc.py',168),
  ('swift-func-defn -> annotation-star func-hdr ARROW block','swift-func-defn',4,'p_swift_func_defn','yacc.py',174),
  ('annotation-star -> <empty>','annotation-star',0,'p_annotation_star','yacc.py',180),
  ('annotation-star -> annotation annotation-star','annotation-star',2,'p_annotation_star','yacc.py',181),
  ('app-func-defn -> annotation-star C_APP func-hdr LBRACE app-body RBRACE','app-func-defn',6,'p_app_func_defn','yacc.py',190),
  ('app-body -> app-arg-expr app-arg-expr-star app-out-star empty-or-semicolon','app-body',4,'p_app_body','yacc.py',197),
  ('empty-or-semicolon -> <empty>','empty-or-semicolon',0,'p_empty_or_semicolon','yacc.py',203),
  ('empty-or-semicolon -> SEMICOLON','empty-or-semicolon',1,'p_empty_or_semicolon','yacc.py',204),
  ('app-out-star -> <empty>','app-out-star',0,'p_app_out_star','yacc.py',211),
  ('app-out-star -> std-in-out-err ASSIGN expr app-out-star','app-out-star',4,'p_app_out_star','yacc.py',212),
  ('std-in-out-err -> E_STDIN','std-in-out-err',1,'p_std_in_out_err','yacc.py',222),
  ('std-in-out-err -> E_STDOUT','std-in-out-err',1,'p_std_in_out_err','yacc.py',223),
  ('std-in-out-err -> E_STDERR','std-in-out-err',1,'p_std_in_out_err','yacc.py',224),
  ('app-arg-expr-star -> <empty>','app-arg-expr-star',0,'p_app_arg_expr_star','yacc.py',231),
  ('app-arg-expr-star -> app-arg-expr app-arg-expr-star','app-arg-expr-star',2,'p_app_arg_expr_star','yacc.py',232),
  ('foreign-func-defn -> annotation-star func-hdr foreign-func-body','foreign-func-defn',3,'p_foreign_func_defn','yacc.py',242),
  ('foreign-func-body -> STR_LITERAL STR_LITERAL empty-or-literal empty-or-more-literals','foreign-func-body',4,'p_foreign_func_body','yacc.py',248),
  ('empty-or-literal -> <empty>','empty-or-literal',0,'p_empty_or_literal','yacc.py',254),
  ('empty-or-literal -> STR_LITERAL','empty-or-literal',1,'p_empty_or_literal','yacc.py',255),
  ('empty-or-more-literals -> <empty>','empty-or-more-literals',0,'p_empty_or_more_literals','yacc.py',261),
  ('empty-or-more-literals -> LBRACKET single-or-multiple-literal RBRACKET','empty-or-more-literals',3,'p_empty_or_more_literals','yacc.py',262),
  ('single-or-multiple-literal -> STR_LITERAL','single-or-multiple-literal',1,'p_single_or_multistring_literal','yacc.py',271),
  ('single-or-multiple-literal -> MUL_STR_LITERAL','single-or-multiple-literal',1,'p_single_or_multistring_literal','yacc.py',272),
  ('var-decl -> type-prefix var-decl-rest','var-decl',2,'p_var_decl','yacc.py',278),
  ('var-decl-rest-star -> <empty>','var-decl-rest-star',0,'p_var_decl_rest_star','yacc.py',284),
  ('var-decl-rest-star -> COMMA var-decl-rest var-decl-rest-star','var-decl-rest-star',3,'p_var_decl_rest_star','yacc.py',285),
  ('var-decl-rest -> var-name type-suffix empty-or-var-mappign empty-or-assign-expr','var-decl-rest',4,'p_var_decl_rest','yacc.py',294),
  ('empty-or-var-mappign -> <empty>','empty-or-var-mappign',0,'p_empty_or_var_mapping','yacc.py',301),
  ('empty-or-var-mappign -> var-mapping','empty-or-var-mappign',1,'p_empty_or_var_mapping','yacc.py',302),
  ('empty-or-assign-expr -> <empty>','empty-or-assign-expr',0,'p_empty_or_assign_expr','yacc.py',309),
  ('empty-or-assign-expr -> ASSIGN expr','empty-or-assign-expr',2,'p_empty_or_assign_expr','yacc.py',310),
  ('type-prefix -> type-name','type-prefix',1,'p_type_prefix','yacc.py',317),
  ('type-prefix -> param-type','type-prefix',1,'p_type_prefix','yacc.py',318),
  ('param-type -> type-name LESS standalone-type GREATER','param-type',4,'p_param_type','yacc.py',324),
  ('type-suffix -> <empty>','type-suffix',0,'p_type_suffix','yacc.py',330),
  ('type-suffix -> LBRACKET empty-or-standalone-type RBRACKET type-suffix','type-suffix',4,'p_type_suffix','yacc.py',331),
  ('empty-or-standalone-type -> <empty>','empty-or-standalone-type',0,'p_empty_or_standalone_type','yacc.py',340),
  ('empty-or-standalone-type -> standalone-type','empty-or-standalone-type',1,'p_empty_or_standalone_type','yacc.py',341),
  ('standalone-type -> type-prefix type-suffix','standalone-type',2,'p_standalone_type','yacc.py',347),
  ('var-mapping -> LESS expr GREATER','var-mapping',3,'p_var_mapping','yacc.py',353),
  ('block -> LBRACE translation-unit RBRACE','block',3,'p_block','yacc.py',359),
  ('stmt-chain -> chainable-stmt semicolon-or-arrow statement','stmt-chain',3,'p_stmt_chain','yacc.py',365),
  ('semicolon-or-arrow -> SEMICOLON','semicolon-or-arrow',1,'p_semicolon_or_arrow','yacc.py',372),
  ('semicolon-or-arrow -> ARROW','semicolon-or-arrow',1,'p_semicolon_or_arrow','yacc.py',373),
  ('chainable-stmt -> var-name','chainable-stmt',1,'p_chainable_stmt','yacc.py',380),
  ('chainable-stmt -> func-call','chainable-stmt',1,'p_chainable_stmt','yacc.py',381),
  ('chainable-stmt -> var-decl','chainable-stmt',1,'p_chainable_stmt','yacc.py',382),
  ('chainable-stmt -> assignment','chainable-stmt',1,'p_chainable_stmt','yacc.py',383),
  ('assignment -> lval-or-paren-lval assign-or-plusas expr-list','assignment',3,'p_assignment','yacc.py',389),
  ('lval-or-lval-list -> lval-list','lval-or-lval-list',1,'p_lval_or_lval_list','yacc.py',396),
  ('lval-or-lval-list -> LPAREN lval-list RPAREN','lval-or-lval-list',3,'p_lval_or_lval_list','yacc.py',397),
  ('assign-or-plusas -> ASSIGN','assign-or-plusas',1,'p_assign_or_plusas','yacc.py',407),
  ('assign-or-plusas -> PLUS_AS','assign-or-plusas',1,'p_assign_or_plusas','yacc.py',408),
  ('lval-or-paren-lval -> lval-list','lval-or-paren-lval',1,'p_lval_or_paren_lval','yacc.py',415),
  ('lval-or-paren-lval -> LPAREN lval-list RPAREN','lval-or-paren-lval',3,'p_lval_or_paren_lval','yacc.py',416),
  ('update-stmt -> var-name LESS ID GREATER UPD expr SEMICOLON','update-stmt',7,'p_update_stmt','yacc.py',426),
  ('if-stmt -> S_IF LPAREN expr RPAREN block opt-else-block','if-stmt',6,'p_if_stmt','yacc.py',432),
  ('opt-else-block -> <empty>','opt-else-block',0,'p_opt_else_block','yacc.py',438),
  ('opt-else-block -> S_ELSE block','opt-else-block',2,'p_opt_else_block','yacc.py',439),
  ('switch-stmt -> S_SWITCH LPAREN expr RPAREN LBRACE case-star opt-default RBRACE','switch-stmt',8,'p_switch_stmt','yacc.py',445),
  ('opt-default -> <empty>','opt-default',0,'p_opt_default','yacc.py',451),
  ('opt-default -> S_DEFAULT','opt-default',1,'p_opt_default','yacc.py',452),
  ('case-star -> <empty>','case-star',0,'p_case_star','yacc.py',458),
  ('case-star -> case case-star','case-star',2,'p_case_star','yacc.py',459),
  ('case -> S_CASE INT COLON translation-unit','case',4,'p_case','yacc.py',468),
  ('default -> S_DEFAULT COLON translation-unit','default',3,'p_default','yacc.py',474),
  ('wait-stmt -> E_WAIT opt-deep LPAREN expr-list RPAREN block','wait-stmt',6,'p_wait_stmt','yacc.py',480),
  ('opt-deep -> <empty>','opt-deep',0,'p_opt_deep','yacc.py',486),
  ('opt-deep -> E_DEEP','opt-deep',1,'p_opt_deep','yacc.py',487),
  ('foreach-loop -> annotation-star S_FOREACH var-name opt-comma-var-name S_IN expr block','foreach-loop',7,'p_foreach_loop','yacc.py',493),
  ('opt-comma-var-name -> <empty>','opt-comma-var-name',0,'p_opt_comma_var_name','yacc.py',502),
  ('opt-comma-var-name -> COMMA var-name','opt-comma-var-name',2,'p_opt_comma_var_name','yacc.py',503),
  ('for-loop -> annotation-star S_FOR LPAREN for-init-list SEMICOLON expr SEMICOLON for-update-list RPAREN block','for-loop',10,'p_for_loop','yacc.py',510),
  ('while-loop -> annotation S_WHILE LPAREN expr RPAREN block','while-loop',6,'p_while_loop','yacc.py',516),
  ('for-init-list -> for-init for-init-star','for-init-list',2,'p_for_init_list','yacc.py',522),
  ('for-init-star -> <empty>','for-init-star',0,'p_for_init_star','yacc.py',528),
  ('for-init-star -> COMMA for-init for-init-star','for-init-star',3,'p_for_init_star','yacc.py',529),
  ('for-init -> for-assignment','for-init',1,'p_for_init','yacc.py',538),
  ('for-init -> type-prefix var-name type-suffix ASSIGN expr','for-init',5,'p_for_init','yacc.py',539),
  ('for-update-list -> for-assignment for-assignment-star','for-update-list',2,'p_for_update_list','yacc.py',549),
  ('for-assignment-star -> <empty>','for-assignment-star',0,'p_for_assignment_star','yacc.py',555),
  ('for-assignment-star -> COMMA for-assignment for-assignment-star','for-assignment-star',3,'p_for_assignment_star','yacc.py',556),
  ('for-assignment -> var-name ASSIGN expr','for-assignment',3,'p_for_assignment','yacc.py',565),
  ('iterate-loop -> S_ITERATE var-name block S_UNTIL LPAREN expr RPAREN','iterate-loop',7,'p_iterate_loop','yacc.py',571),
  ('expr -> or-expr','expr',1,'p_expr','yacc.py',577),
  ('or-expr -> and-expr','or-expr',1,'p_or_expr','yacc.py',583),
  ('or-expr -> or-expr LOG_OR and-expr','or-expr',3,'p_or_expr','yacc.py',584),
  ('and-expr -> eq-expr','and-expr',1,'p_and_expr','yacc.py',593),
  ('and-expr -> and-expr LOG_AND eq-expr','and-expr',3,'p_and_expr','yacc.py',594),
  ('eq-expr -> cmp-expr','eq-expr',1,'p_eq_expr','yacc.py',603),
  ('eq-expr -> eq-expr eq-or-not-eq eq-expr','eq-expr',3,'p_eq_expr','yacc.py',604),
  ('eq-or-not-eq -> EQUAL','eq-or-not-eq',1,'p_eq_or_not_eq','yacc.py',614),
  ('eq-or-not-eq -> NOT_EQUAL','eq-or-not-eq',1,'p_eq_or_not_eq','yacc.py',615),
  ('cmp-expr -> add-expr','cmp-expr',1,'p_cmp_expr','yacc.py',622),
  ('cmp-expr -> cmp-expr cmp-sign add-expr','cmp-expr',3,'p_cmp_expr','yacc.py',623),
  ('cmp-sign -> LESS','cmp-sign',1,'p_cmp_sign','yacc.py',633),
  ('cmp-sign -> LESS_EQ','cmp-sign',1,'p_cmp_sign','yacc.py',634),
  ('cmp-sign -> EQUAL','cmp-sign',1,'p_cmp_sign','yacc.py',635),
  ('cmp-sign -> GREATER','cmp-sign',1,'p_cmp_sign','yacc.py',636),
  ('cmp-sign -> GREATER_EQ','cmp-sign',1,'p_cmp_sign','yacc.py',637),
  ('add-expr -> mult-expr','add-expr',1,'p_add_expr','yacc.py',644),
  ('add-expr -> add-expr add-sign mult-expr','add-expr',3,'p_add_expr','yacc.py',645),
  ('add-sign -> PLUS','add-sign',1,'p_add_sign','yacc.py',655),
  ('add-sign -> MINUS','add-sign',1,'p_add_sign','yacc.py',656),
  ('mult-expr -> unary-expr','mult-expr',1,'p_mult_expr','yacc.py',663),
  ('mult-expr -> mult-expr mult-sign unary-expr','mult-expr',3,'p_mult_expr','yacc.py',664),
  ('mult-sign -> MULT','mult-sign',1,'p_mult_sign','yacc.py',674),
  ('mult-sign -> DIV','mult-sign',1,'p_mult_sign','yacc.py',675),
  ('mult-sign -> MULTPER','mult-sign',1,'p_mult_sign','yacc.py',676),
  ('mult-sign -> DOUBLEPER','mult-sign',1,'p_mult_sign','yacc.py',677),
  ('mult-sign -> MOD','mult-sign',1,'p_mult_sign','yacc.py',678),
  ('unary-expr -> postfix-expr','unary-expr',1,'p_unary_expr','yacc.py',685),
  ('unary-expr -> minus-or-excl postfix-expr','unary-expr',2,'p_unary_expr','yacc.py',686),
  ('minus-or-excl -> MINUS','minus-or-excl',1,'p_minus_or_excl','yacc.py',696),
  ('minus-or-excl -> EXCLAMATION','minus-or-excl',1,'p_minus_or_excl','yacc.py',697),
  ('postfix-expr -> base-expr','postfix-expr',1,'p_postfix_expr','yacc.py',704),
  ('postfix-expr -> postfix-expr array-or-struct','postfix-expr',2,'p_postfix_expr','yacc.py',705),
  ('array-or-struct -> array-subscript','array-or-struct',1,'p_array_or_struct','yacc.py',714),
  ('array-or-struct -> struct-subscript','array-or-struct',1,'p_array_or_struct','yacc.py',715),
  ('array-subscript -> LBRACKET expr RBRACKET','array-subscript',3,'p_array_subscript','yacc.py',721),
  ('struct-subscript -> DOT ID','struct-subscript',2,'p_struct_subscript','yacc.py',727),
  ('base-expr -> literal','base-expr',1,'p_base_expr','yacc.py',733),
  ('base-expr -> func-call','base-expr',1,'p_base_expr','yacc.py',734),
  ('base-expr -> var-name','base-expr',1,'p_base_expr','yacc.py',735),
  ('base-expr -> LPAREN expr RPAREN','base-expr',3,'p_base_expr','yacc.py',736),
  ('base-expr -> tuple-constructor','base-expr',1,'p_base_expr','yacc.py',737),
  ('base-expr -> array-constructor','base-expr',1,'p_base_expr','yacc.py',738),
  ('func-call -> annotation-star func-name LPAREN func-call-arg-list RPAREN','func-call',5,'p_func_call','yacc.py',747),
  ('func-call-arg-list -> expr-or-kw func-call-arg-star','func-call-arg-list',2,'p_func_call_arg_list','yacc.py',754),
  ('func-call-arg-star -> <empty>','func-call-arg-star',0,'p_def_expr_star','yacc.py',760),
  ('func-call-arg-star -> COMMA expr-or-kw func-call-arg-star','func-call-arg-star',3,'p_def_expr_star','yacc.py',761),
  ('expr-or-kw -> expr','expr-or-kw',1,'p_expr_or_kw','yacc.py',770),
  ('expr-or-kw -> kw-expr','expr-or-kw',1,'p_expr_or_kw','yacc.py',771),
  ('tuple-constructor -> LPAREN expr COMMA expr comma-expr-star RPAREN','tuple-constructor',6,'p_tuple_constructor','yacc.py',777),
  ('comma-expr-star -> <empty>','comma-expr-star',0,'p_comma_expr_star','yacc.py',783),
  ('comma-expr-star -> COMMA expr comma-expr-star','comma-expr-star',3,'p_comma_expr_star','yacc.py',784),
  ('array-constructor -> array-list-constructor','array-constructor',1,'p_array_constructor','yacc.py',793),
  ('array-constructor -> array-range-constructor','array-constructor',1,'p_array_constructor','yacc.py',794),
  ('array-constructor -> array-kv-constructor','array-constructor',1,'p_array_constructor','yacc.py',795),
  ('array-list-constructor -> LBRACKET opt-expr-list RBRACKET','array-list-constructor',3,'p_array_list_constructor','yacc.py',801),
  ('opt-expr-list -> <empty>','opt-expr-list',0,'p_opt_expr_list','yacc.py',807),
  ('opt-expr-list -> expr-list','opt-expr-list',1,'p_opt_expr_list','yacc.py',808),
  ('array-range-constructor -> LBRACKET expr COLON expr opt-coloned-expr RBRACKET','array-range-constructor',6,'p_array_range_constructor','yacc.py',814),
  ('opt-coloned-expr -> <empty>','opt-coloned-expr',0,'p_opt_coloned_expr','yacc.py',820),
  ('opt-coloned-expr -> COLON expr','opt-coloned-expr',2,'p_opt_coloned_expr','yacc.py',821),
  ('array-kv-constructor -> LBRACE opt-array-constructor RBRACE','array-kv-constructor',3,'p_array_kv_constructor','yacc.py',828),
  ('opt-array-constructor -> <empty>','opt-array-constructor',0,'p_opt_array_constructor','yacc.py',834),
  ('opt-array-constructor -> array-kv-elem comma-array-kv-elem-star','opt-array-constructor',2,'p_opt_array_constructor','yacc.py',835),
  ('comma-array-kv-elem-star -> <empty>','comma-array-kv-elem-star',0,'p_comma_array_kv_elem_star','yacc.py',842),
  ('comma-array-kv-elem-star -> COMMA array-kv-elem comma-array-kv-elem-star','comma-array-kv-elem-star',3,'p_comma_array_kv_elem_star','yacc.py',843),
  ('array-kv-elem -> expr COLON expr','array-kv-elem',3,'p_array_kv_elem','yacc.py',852),
  ('annotation -> AT ID','annotation',2,'p_annotation','yacc.py',858),
  ('annotation -> AT kw-expr','annotation',2,'p_annotation','yacc.py',859),
  ('kw-expr -> ID ASSIGN expr','kw-expr',3,'p_kw_expr','yacc.py',865),
  ('literal -> STR_LITERAL','literal',1,'p_literal','yacc.py',871),
  ('literal -> MUL_STR_LITERAL','literal',1,'p_literal','yacc.py',872),
  ('literal -> INT','literal',1,'p_literal','yacc.py',873),
  ('literal -> float-literal','literal',1,'p_literal','yacc.py',874),
  ('literal -> bool-literal','literal',1,'p_literal','yacc.py',875),
  ('float-literal -> DOUBLE','float-literal',1,'p_float_literal','yacc.py',881),
  ('float-literal -> INF','float-literal',1,'p_float_literal','yacc.py',882),
  ('float-literal -> NAN','float-literal',1,'p_float_literal','yacc.py',883),
  ('bool-literal -> E_TRUE','bool-literal',1,'p_bool_literal','yacc.py',890),
  ('bool-literal -> E_FALSE','bool-literal',1,'p_bool_literal','yacc.py',891),
  ('expr-list -> expr','expr-list',1,'p_expr_list','yacc.py',897),
  ('type-name -> class_INT','type-name',1,'p_type_name','yacc.py',904),
  ('type-name -> class_DOUBLE','type-name',1,'p_type_name','yacc.py',905),
  ('type-name -> class_FLOAT','type-name',1,'p_type_name','yacc.py',906),
  ('type-name -> class_VOID','type-name',1,'p_type_name','yacc.py',907),
  ('type-name -> class_UINT','type-name',1,'p_type_name','yacc.py',908),
  ('type-name -> class_BOOL','type-name',1,'p_type_name','yacc.py',909),
  ('type-name -> class_CHARACTER','type-name',1,'p_type_name','yacc.py',910),
  ('type-name -> class_String','type-name',1,'p_type_name','yacc.py',911),
  ('type-name -> collection_SET','type-name',1,'p_type_name','yacc.py',912),
  ('type-name -> collection_ARRAY','type-name',1,'p_type_name','yacc.py',913),
  ('type-name -> collection_DICT','type-name',1,'p_type_name','yacc.py',914),
  ('type-name -> ID','type-name',1,'p_type_name','yacc.py',915),
  ('const-name -> D_LET ID','const-name',2,'p_const_name','yacc.py',921),
  ('var-name -> ID','var-name',1,'p_var_name','yacc.py',927),
  ('func-name -> D_FUNCTION ID','func-name',2,'p_func_name','yacc.py',934),
  ('lval-list -> lval-expr lval-expr-star','lval-list',2,'p_lval_list','yacc.py',940),
  ('lval-expr-star -> <empty>','lval-expr-star',0,'p_lval_expr_star','yacc.py',946),
  ('lval-expr-star -> COMMA lval-expr lval-expr-star','lval-expr-star',3,'p_lval_expr_star','yacc.py',947),
  ('lval-expr -> var-name subscript-star','lval-expr',2,'p_lval_expr','yacc.py',956),
  ('subscript-star -> <empty>','subscript-star',0,'p_subscript_star','yacc.py',962),
  ('subscript-star -> array-subscript subscript-star','subscript-star',2,'p_subscript_star','yacc.py',963),
  ('subscript-star -> struct-subscript subscript-star','subscript-star',2,'p_subscript_star','yacc.py',964),
  ('app-arg-expr -> opt-at var-name','app-arg-expr',2,'p_app_arg_expr','yacc.py',973),
  ('app-arg-expr -> literal','app-arg-expr',1,'p_app_arg_expr','yacc.py',974),
  ('app-arg-expr -> array-constructor','app-arg-expr',1,'p_app_arg_expr','yacc.py',975),
  ('app-arg-expr -> LPAREN expr RPAREN','app-arg-expr',3,'p_app_arg_expr','yacc.py',976),
  ('opt-at -> <empty>','opt-at',0,'p_opt_at','yacc.py',987),
  ('opt-at -> AT','opt-at',1,'p_opt_at','yacc.py',988),
]
